/*
 * Classe responsável pela tela principal do programa.
 * 
 */
package desktopapplication1.resources;

import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author  Fabio Dela Bruna, Márcio Ozório Teixeira
 */
public class FramePrincipal extends javax.swing.JFrame {

    private Vector<Aresta> arestas = new Vector();
    private Vector<No> nos = new Vector();

    /** Criando o FramePrincipal */
    public FramePrincipal() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCidade = new javax.swing.JPanel();
        jLabelNomeCidade = new javax.swing.JLabel();
        jTextFieldlNomeCidade = new javax.swing.JTextField();
        jButtonInserirCidade = new javax.swing.JButton();
        jPanelRota = new javax.swing.JPanel();
        jLabelOrigem = new javax.swing.JLabel();
        jComboBoxOrigem = new javax.swing.JComboBox();
        jLabelDestino = new javax.swing.JLabel();
        jComboBoxDestino = new javax.swing.JComboBox();
        jButtonInserirRota = new javax.swing.JButton();
        jLabelDistancia = new javax.swing.JLabel();
        jTextFieldDistancia = new javax.swing.JTextField();
        jLabelKilometragem = new javax.swing.JLabel();
        jPanelResultado = new javax.swing.JPanel();
        jButtonCalcularResultado = new javax.swing.JButton();
        jLabelResultado = new javax.swing.JLabel();
        jLabelResultado1 = new javax.swing.JLabel();
        jLabelResultado2 = new javax.swing.JLabel();
        jBarraMenu = new javax.swing.JMenuBar();
        jMenuArquivo = new javax.swing.JMenu();
        jMenuItemSair = new javax.swing.JMenuItem();
        jMenuAjuda = new javax.swing.JMenu();
        jMenuItemSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calcular Distâncias de Aeroportos");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setMaximizedBounds(new java.awt.Rectangle(1000, 2000, 0, 0));
        setName("framePrincipal"); // NOI18N

        jPanelCidade.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inserir Cidades", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        jPanelCidade.setName("jPanelCidade"); // NOI18N

        jLabelNomeCidade.setText("Nome:");
        jLabelNomeCidade.setName("jLabelNomeCidade"); // NOI18N

        jTextFieldlNomeCidade.setName("jTextFieldNomeCidade"); // NOI18N

        jButtonInserirCidade.setText("Inserir");
        jButtonInserirCidade.setName("jButtonInserirCidade"); // NOI18N
        jButtonInserirCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirCidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCidadeLayout = new javax.swing.GroupLayout(jPanelCidade);
        jPanelCidade.setLayout(jPanelCidadeLayout);
        jPanelCidadeLayout.setHorizontalGroup(
            jPanelCidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCidadeLayout.createSequentialGroup()
                        .addComponent(jLabelNomeCidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldlNomeCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE))
                    .addComponent(jButtonInserirCidade, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanelCidadeLayout.setVerticalGroup(
            jPanelCidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCidadeLayout.createSequentialGroup()
                .addGroup(jPanelCidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelNomeCidade)
                    .addComponent(jTextFieldlNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonInserirCidade)
                .addContainerGap(5, Short.MAX_VALUE))
        );

        jPanelRota.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inserir Rotas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        jPanelRota.setName("jPanelRota"); // NOI18N

        jLabelOrigem.setText("Origem:");
        jLabelOrigem.setName("jLabelOrigem"); // NOI18N

        jComboBoxOrigem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione" }));
        jComboBoxOrigem.setName("jComboBoxOrigem"); // NOI18N

        jLabelDestino.setText("Destino:");
        jLabelDestino.setName("jLabelDestino"); // NOI18N

        jComboBoxDestino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione" }));
        jComboBoxDestino.setName("jComboBoxDestino"); // NOI18N

        jButtonInserirRota.setText("Inserir");
        jButtonInserirRota.setName("jButtonInserirRota"); // NOI18N
        jButtonInserirRota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirRotaActionPerformed(evt);
            }
        });

        jLabelDistancia.setText("Distância:");
        jLabelDistancia.setName("jLabelDistancia"); // NOI18N

        jTextFieldDistancia.setName("jTextFieldDistancia"); // NOI18N

        jLabelKilometragem.setText("Km.");
        jLabelKilometragem.setName("jLabelKilometragem"); // NOI18N

        javax.swing.GroupLayout jPanelRotaLayout = new javax.swing.GroupLayout(jPanelRota);
        jPanelRota.setLayout(jPanelRotaLayout);
        jPanelRotaLayout.setHorizontalGroup(
            jPanelRotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRotaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelRotaLayout.createSequentialGroup()
                        .addComponent(jLabelOrigem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRotaLayout.createSequentialGroup()
                        .addComponent(jLabelDistancia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDistancia)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRotaLayout.createSequentialGroup()
                        .addComponent(jLabelDestino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxDestino, 0, 127, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRotaLayout.createSequentialGroup()
                        .addComponent(jLabelKilometragem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jButtonInserirRota)))
                .addContainerGap())
        );
        jPanelRotaLayout.setVerticalGroup(
            jPanelRotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRotaLayout.createSequentialGroup()
                .addGroup(jPanelRotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOrigem)
                    .addComponent(jLabelDestino)
                    .addComponent(jComboBoxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRotaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInserirRota)
                    .addComponent(jLabelDistancia)
                    .addComponent(jTextFieldDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKilometragem))
                .addContainerGap(6, Short.MAX_VALUE))
        );

        jPanelResultado.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultado"));
        jPanelResultado.setName("jPanelResultado"); // NOI18N

        jButtonCalcularResultado.setText("Calcular Menor Rota");
        jButtonCalcularResultado.setName("jButtonCalcularResultado"); // NOI18N
        jButtonCalcularResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularResultadoActionPerformed(evt);
            }
        });

        jLabelResultado.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelResultado.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelResultado.setAutoscrolls(true);
        jLabelResultado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelResultado.setName("jLabelResultado"); // NOI18N
        jLabelResultado.setOpaque(true);

        jLabelResultado1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelResultado1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelResultado1.setName("jLabelResultado1"); // NOI18N

        jLabelResultado2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelResultado2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabelResultado2.setName("jLabelResultado2"); // NOI18N

        javax.swing.GroupLayout jPanelResultadoLayout = new javax.swing.GroupLayout(jPanelResultado);
        jPanelResultado.setLayout(jPanelResultadoLayout);
        jPanelResultadoLayout.setHorizontalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonCalcularResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelResultado2, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addComponent(jLabelResultado1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jLabelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
        );
        jPanelResultadoLayout.setVerticalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelResultadoLayout.createSequentialGroup()
                .addComponent(jLabelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelResultado1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelResultado2, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCalcularResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jBarraMenu.setName("jBarraMenu"); // NOI18N

        jMenuArquivo.setText("Arquivo");
        jMenuArquivo.setName("jMenuArquivo"); // NOI18N

        jMenuItemSair.setText("Sair");
        jMenuItemSair.setName("jMenuItemSair"); // NOI18N
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenuArquivo.add(jMenuItemSair);

        jBarraMenu.add(jMenuArquivo);

        jMenuAjuda.setText("Ajuda");
        jMenuAjuda.setName("jMenuAjuda"); // NOI18N

        jMenuItemSobre.setText("Sobre");
        jMenuItemSobre.setName("jMenuItemSobre"); // NOI18N
        jMenuItemSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSobreActionPerformed(evt);
            }
        });
        jMenuAjuda.add(jMenuItemSobre);

        jBarraMenu.add(jMenuAjuda);

        setJMenuBar(jBarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelRota, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCidade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelResultado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelRota, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
    System.exit(0);
}//GEN-LAST:event_jMenuItemSairActionPerformed

private void jMenuItemSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSobreActionPerformed
    JOptionPane.showMessageDialog(this, "Programa responsável por Calcular o\n" +
            "Caminho Mínimo de uma rota áerea\n" +
            "definida entre algumas cidades.\n " +
            "Apresentado como Trabalho Final da\n " +
            "disciplina de Teoria de Grafos.\n\n" +
            "Desenvolvido por:\n\tFabio Dela Bruna\n" +
            "\tMárcio Ozório Teixeira.", "Sobre...", JOptionPane.PLAIN_MESSAGE);
}//GEN-LAST:event_jMenuItemSobreActionPerformed

    public boolean noExiste(Vector vetor, Object no) {
        return vetor.indexOf(no) != -1;
    }

    public boolean adicionarNo(Vector vetor, Object no) {
        if (noExiste(vetor, no)) {
            return false; //Nó ja existe!
        } else {
            vetor.add(no);
            return true;
        }
    }

private void jButtonInserirCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirCidadeActionPerformed

    if (jTextFieldlNomeCidade.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Digite um nome de uma Cidade para ser inserido!", "Erro", JOptionPane.WARNING_MESSAGE);
    } else {

        No no = new No(jTextFieldlNomeCidade.getText().trim().toUpperCase());

        if (adicionarNo(nos, no)) {
            JOptionPane.showMessageDialog(this, "Cidade Inserida com Sucesso!", "Ok", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldlNomeCidade.setText("");

            //Atualizar Combos com o novo nó.
            jComboBoxOrigem.addItem(no);
            jComboBoxDestino.addItem(no);

        } else {
            JOptionPane.showMessageDialog(this, "Cidade Já Inserido!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
}//GEN-LAST:event_jButtonInserirCidadeActionPerformed

private void jButtonInserirRotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirRotaActionPerformed
    double distancia;

    if (jComboBoxOrigem.getSelectedItem() == "Selecione") {
        JOptionPane.showMessageDialog(this, "Selecione a Cidade de Origem!", "Erro", JOptionPane.ERROR_MESSAGE);
    } else {
        if (jComboBoxDestino.getSelectedItem() == "Selecione") {
            JOptionPane.showMessageDialog(this, "Selecione a Cidade de Destino!", "Erro", JOptionPane.ERROR_MESSAGE);
        } else {
            if (jTextFieldDistancia.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Preencha um Valor de Distância!", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {

                No noOrigem = (No) jComboBoxOrigem.getSelectedItem();
                No noDestino = (No) jComboBoxDestino.getSelectedItem();

                try {
                    distancia = Double.parseDouble(jTextFieldDistancia.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Digite um Valor Real!", "Erro", JOptionPane.ERROR_MESSAGE);
                    jTextFieldDistancia.setText("");
                    jTextFieldDistancia.requestFocus();
                    return;
                }

                if (distancia < 0) {
                    JOptionPane.showMessageDialog(this, "Digite um Valor Positivo!", "Erro", JOptionPane.ERROR_MESSAGE);
                    jTextFieldDistancia.setText("");
                    jTextFieldDistancia.requestFocus();
                } else {

                    if (noOrigem.compareTo(noDestino) != 0) {

                        Aresta aresta = new Aresta(noDestino, noOrigem, distancia);

                        if (adicionarNo(arestas, aresta)) {
                            JOptionPane.showMessageDialog(this, "Rota Inserida Com Sucesso!", "Ok", JOptionPane.INFORMATION_MESSAGE);
                            jTextFieldDistancia.setText("");
                            jComboBoxDestino.setSelectedIndex(0);
                            jComboBoxOrigem.setSelectedIndex(0);
                        } else {
                            JOptionPane.showMessageDialog(this, "Rota já Existe!", "Erro", JOptionPane.ERROR_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Cidade Destino deve ser Diferente da Cidade Origem!", "Erro", JOptionPane.ERROR_MESSAGE);
                    }

                }
            }
        }
    }

}//GEN-LAST:event_jButtonInserirRotaActionPerformed

private void jButtonCalcularResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularResultadoActionPerformed

    No[] vetor_nos = new No[FramePrincipal.this.nos.size()];

    FramePrincipal.this.nos.toArray(vetor_nos);

    Caminho caminho = new Caminho(vetor_nos);
    caminho.setDistanciaTotal(0.0);
    
    if (jComboBoxDestino.getSelectedIndex() == 0 || jComboBoxOrigem.getSelectedIndex() == 0) {
        JOptionPane.showMessageDialog(this, "Selecione uma Rota, com Origem e Destino!", "Erro", JOptionPane.ERROR_MESSAGE);
    } else {

        No noOrigem = (No) jComboBoxOrigem.getSelectedItem();
        No noDestino = (No) jComboBoxDestino.getSelectedItem();

        No[] menor = caminho.menorCaminho(noOrigem, noDestino);

        String text = "A Rota de Menor Distância Entre as Cidades de: " + noOrigem.getNome() + " e " + noDestino.getNome() + " é a seguinte:";
        String rota = "";
         
        if (menor != null) {
            int count = 0;
            for (int i = 0; i < menor.length; i++) {
                if (menor[i] != null) {
                    count++;

                    if (i > 0) {
                        rota += "→ ";
                    }
                    rota += menor[i];

                }
            }

            if (count == 1 && menor[0].getCusto() == Caminho.valorMaximo) {
                JOptionPane.showMessageDialog(this, "Não existe Rota de \"" + noOrigem + "\" até \"" + noDestino + "\".", "Erro", JOptionPane.ERROR_MESSAGE);
            } else {
                jLabelResultado.setText(text);
                jLabelResultado1.setText(rota);
                jLabelResultado2.setText("Distância Total: "+ caminho.getDistanciaTotal());
            }

        } else {
            JOptionPane.showMessageDialog(this, "Não Existem Cidades Vizinhas a Origem!", text, WIDTH);
        }
    }
}//GEN-LAST:event_jButtonCalcularResultadoActionPerformed



public static void main(String[] args) {
    FramePrincipal principal = new FramePrincipal();
    principal.setVisible(true);
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jBarraMenu;
    private javax.swing.JButton jButtonCalcularResultado;
    private javax.swing.JButton jButtonInserirCidade;
    private javax.swing.JButton jButtonInserirRota;
    private javax.swing.JComboBox jComboBoxDestino;
    private javax.swing.JComboBox jComboBoxOrigem;
    private javax.swing.JLabel jLabelDestino;
    private javax.swing.JLabel jLabelDistancia;
    private javax.swing.JLabel jLabelKilometragem;
    private javax.swing.JLabel jLabelNomeCidade;
    private javax.swing.JLabel jLabelOrigem;
    private javax.swing.JLabel jLabelResultado;
    private javax.swing.JLabel jLabelResultado1;
    private javax.swing.JLabel jLabelResultado2;
    private javax.swing.JMenu jMenuAjuda;
    private javax.swing.JMenu jMenuArquivo;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemSobre;
    private javax.swing.JPanel jPanelCidade;
    private javax.swing.JPanel jPanelResultado;
    private javax.swing.JPanel jPanelRota;
    private javax.swing.JTextField jTextFieldDistancia;
    private javax.swing.JTextField jTextFieldlNomeCidade;
    // End of variables declaration//GEN-END:variables
}
