CCS PCM C Compiler, Version 4.093, 5065               12-Aðu-10 10:46

               Filename: C:\Documents and Settings\lab.academico\Desktop\PIC\Exercícios\Lista1\exercicio1.lst

               ROM used: 179 words (2%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         8 (2%) worst case
               Stack:    0 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses XT, PROTECT 
.................... #use delay(clock=4Mhz) 
.................... #use rs232(baud=9600, xmit=pin_c6, rcv=pin_c7) 
....................  
.................... #define led1 pin_d0 
.................... #define led2 pin_d1 
.................... #define led3 pin_d2 
.................... #define led4 pin_d3 
.................... #define led5 pin_d4 
.................... #define led6 pin_d5 
.................... #define led7 pin_d6 
.................... #define led8 pin_d7 
....................  
.................... #define setLed pin_b5 
.................... #define DELAY 100 
....................  
.................... void main() { 
0004:  CLRF   04
0005:  BCF    03.7
0006:  MOVLW  1F
0007:  ANDWF  03,F
0008:  MOVLW  19
0009:  BSF    03.5
000A:  MOVWF  19
000B:  MOVLW  A6
000C:  MOVWF  18
000D:  MOVLW  90
000E:  BCF    03.5
000F:  MOVWF  18
0010:  BSF    03.5
0011:  BSF    1F.0
0012:  BSF    1F.1
0013:  BSF    1F.2
0014:  BCF    1F.3
0015:  MOVLW  07
0016:  MOVWF  1C
....................  
....................    char c = ' '; 
0017:  MOVLW  20
0018:  BCF    03.5
0019:  MOVWF  21
....................    int count = 0; 
001A:  CLRF   22
....................    output_bit(setLed,1); 
001B:  BSF    06.5
001C:  BSF    03.5
001D:  BCF    06.5
....................    output_d(0x00); 
001E:  CLRF   08
001F:  BCF    03.5
0020:  CLRF   08
....................  
....................    while(true) { 
....................    
....................       if(kbhit()){ 
0021:  BTFSS  0C.5
0022:  GOTO   0B1
....................          c = getc(); 
0023:  BTFSS  0C.5
0024:  GOTO   023
0025:  MOVF   1A,W
0026:  MOVWF  21
....................          if(c == '+' && count <= 8) { 
0027:  MOVF   21,W
0028:  SUBLW  2B
0029:  BTFSS  03.2
002A:  GOTO   06E
002B:  MOVF   22,W
002C:  SUBLW  08
002D:  BTFSS  03.0
002E:  GOTO   06E
....................             count++; 
002F:  INCF   22,F
....................             if(count == 1) 
0030:  DECFSZ 22,W
0031:  GOTO   036
....................                output_bit(led1, 1); 
0032:  BSF    08.0
0033:  BSF    03.5
0034:  BCF    08.0
0035:  BCF    03.5
....................             if(count == 2) 
0036:  MOVF   22,W
0037:  SUBLW  02
0038:  BTFSS  03.2
0039:  GOTO   03E
....................                output_bit(led2, 1); 
003A:  BSF    08.1
003B:  BSF    03.5
003C:  BCF    08.1
003D:  BCF    03.5
....................             if(count == 3)    
003E:  MOVF   22,W
003F:  SUBLW  03
0040:  BTFSS  03.2
0041:  GOTO   046
....................                output_bit(led3, 1);    
0042:  BSF    08.2
0043:  BSF    03.5
0044:  BCF    08.2
0045:  BCF    03.5
....................             if(count == 4) 
0046:  MOVF   22,W
0047:  SUBLW  04
0048:  BTFSS  03.2
0049:  GOTO   04E
....................                output_bit(led4, 1); 
004A:  BSF    08.3
004B:  BSF    03.5
004C:  BCF    08.3
004D:  BCF    03.5
....................             if(count == 5) 
004E:  MOVF   22,W
004F:  SUBLW  05
0050:  BTFSS  03.2
0051:  GOTO   056
....................                output_bit(led5, 1); 
0052:  BSF    08.4
0053:  BSF    03.5
0054:  BCF    08.4
0055:  BCF    03.5
....................             if(count == 6) 
0056:  MOVF   22,W
0057:  SUBLW  06
0058:  BTFSS  03.2
0059:  GOTO   05E
....................                output_bit(led6, 1); 
005A:  BSF    08.5
005B:  BSF    03.5
005C:  BCF    08.5
005D:  BCF    03.5
....................             if(count == 7) 
005E:  MOVF   22,W
005F:  SUBLW  07
0060:  BTFSS  03.2
0061:  GOTO   066
....................                output_bit(led7, 1); 
0062:  BSF    08.6
0063:  BSF    03.5
0064:  BCF    08.6
0065:  BCF    03.5
....................             if(count == 8) 
0066:  MOVF   22,W
0067:  SUBLW  08
0068:  BTFSS  03.2
0069:  GOTO   06E
....................                output_bit(led8, 1); 
006A:  BSF    08.7
006B:  BSF    03.5
006C:  BCF    08.7
006D:  BCF    03.5
....................  
....................          } 
....................          if (c=='-' && count >= 0) { 
006E:  MOVF   21,W
006F:  SUBLW  2D
0070:  BTFSS  03.2
0071:  GOTO   0B1
....................             if(count == 8) 
0072:  MOVF   22,W
0073:  SUBLW  08
0074:  BTFSS  03.2
0075:  GOTO   07A
....................                output_bit(led8, 0); 
0076:  BCF    08.7
0077:  BSF    03.5
0078:  BCF    08.7
0079:  BCF    03.5
....................             if(count == 7) 
007A:  MOVF   22,W
007B:  SUBLW  07
007C:  BTFSS  03.2
007D:  GOTO   082
....................                output_bit(led7, 0); 
007E:  BCF    08.6
007F:  BSF    03.5
0080:  BCF    08.6
0081:  BCF    03.5
....................             if(count == 6) 
0082:  MOVF   22,W
0083:  SUBLW  06
0084:  BTFSS  03.2
0085:  GOTO   08A
....................                output_bit(led6, 0); 
0086:  BCF    08.5
0087:  BSF    03.5
0088:  BCF    08.5
0089:  BCF    03.5
....................             if(count == 5) 
008A:  MOVF   22,W
008B:  SUBLW  05
008C:  BTFSS  03.2
008D:  GOTO   092
....................                output_bit(led5, 0); 
008E:  BCF    08.4
008F:  BSF    03.5
0090:  BCF    08.4
0091:  BCF    03.5
....................             if(count == 4) 
0092:  MOVF   22,W
0093:  SUBLW  04
0094:  BTFSS  03.2
0095:  GOTO   09A
....................                output_bit(led4, 0); 
0096:  BCF    08.3
0097:  BSF    03.5
0098:  BCF    08.3
0099:  BCF    03.5
....................             if(count == 3) 
009A:  MOVF   22,W
009B:  SUBLW  03
009C:  BTFSS  03.2
009D:  GOTO   0A2
....................                output_bit(led3, 0); 
009E:  BCF    08.2
009F:  BSF    03.5
00A0:  BCF    08.2
00A1:  BCF    03.5
....................             if(count == 2) 
00A2:  MOVF   22,W
00A3:  SUBLW  02
00A4:  BTFSS  03.2
00A5:  GOTO   0AA
....................                output_bit(led2, 0); 
00A6:  BCF    08.1
00A7:  BSF    03.5
00A8:  BCF    08.1
00A9:  BCF    03.5
....................             if(count == 1) 
00AA:  DECFSZ 22,W
00AB:  GOTO   0B0
....................                output_bit(led1, 0); 
00AC:  BCF    08.0
00AD:  BSF    03.5
00AE:  BCF    08.0
00AF:  BCF    03.5
....................             count--; 
00B0:  DECF   22,F
....................          } 
....................       }       
....................    } 
00B1:  GOTO   021
....................  
.................... } 
00B2:  SLEEP

Configuration Fuses:
   Word  1: 1F71   XT NOWDT PUT PROTECT NODEBUG BROWNOUT NOLVP NOCPD NOWRT
