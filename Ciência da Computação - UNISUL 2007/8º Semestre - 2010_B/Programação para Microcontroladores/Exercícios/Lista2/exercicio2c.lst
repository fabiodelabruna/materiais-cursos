CCS PCM C Compiler, Version 4.038, 33467               21-set-10 16:58

               Filename: C:\Users\Fabio Dela Bruna\Documents\Curso de Ciência da Computação\8º Semestre\Programação para Microcontroladores - Prof. Fernando Kestering Longo\Exercícios\Lista2\exercicio2c.lst

               ROM used: 328 words (4%)
                         Largest free fragment is 2048
               RAM used: 11 (3%) at main() level
                         19 (5%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0C2
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses XT, PROTECT 
.................... #use delay(clock=4Mhz) 
.................... #use rs232(baud=9600, xmit=pin_c6, rcv=pin_c7) 
....................  
....................  
.................... void main() { 
00C2:  CLRF   04
00C3:  BCF    03.7
00C4:  MOVLW  1F
00C5:  ANDWF  03,F
00C6:  MOVLW  19
00C7:  BSF    03.5
00C8:  MOVWF  19
00C9:  MOVLW  A6
00CA:  MOVWF  18
00CB:  MOVLW  90
00CC:  BCF    03.5
00CD:  MOVWF  18
00CE:  BSF    03.5
00CF:  BSF    1F.0
00D0:  BSF    1F.1
00D1:  BSF    1F.2
00D2:  BCF    1F.3
00D3:  MOVLW  07
00D4:  MOVWF  1C
....................  
....................    char c = ' '; 
00D5:  MOVLW  20
00D6:  BCF    03.5
00D7:  MOVWF  21
....................    int countA0 = 0; 
00D8:  CLRF   22
....................    int countA1 = 0; 
00D9:  CLRF   23
....................  
....................    while(true) { 
....................     
....................       if(kbhit()) { 
00DA:  BTFSS  0C.5
00DB:  GOTO   146
....................           
....................          c = getc(); 
00DC:  BTFSS  0C.5
00DD:  GOTO   0DC
00DE:  MOVF   1A,W
00DF:  MOVWF  21
....................           
....................          if(c == '0') { 
00E0:  MOVF   21,W
00E1:  SUBLW  30
00E2:  BTFSS  03.2
00E3:  GOTO   0EA
....................             output_bit(pin_a0, 1); 
00E4:  BSF    05.0
00E5:  BSF    03.5
00E6:  BCF    05.0
....................             countA0++; 
00E7:  BCF    03.5
00E8:  INCF   22,F
....................          } else if (c == '1') { 
00E9:  GOTO   0F3
00EA:  MOVF   21,W
00EB:  SUBLW  31
00EC:  BTFSS  03.2
00ED:  GOTO   0F3
....................             output_bit(pin_a1, 1); 
00EE:  BSF    05.1
00EF:  BSF    03.5
00F0:  BCF    05.1
....................             countA1++; 
00F1:  BCF    03.5
00F2:  INCF   23,F
....................          } 
....................           
....................           
....................          if (input(pin_a0)) { 
00F3:  BSF    03.5
00F4:  BSF    05.0
00F5:  BCF    03.5
00F6:  BTFSS  05.0
00F7:  GOTO   11D
....................             printf("Pressionou 'A0' %d vezes!\r\n", countA0); 
00F8:  CLRF   24
00F9:  MOVF   24,W
00FA:  CALL   004
00FB:  INCF   24,F
00FC:  MOVWF  77
00FD:  MOVF   77,W
00FE:  BTFSS  0C.4
00FF:  GOTO   0FE
0100:  MOVWF  19
0101:  MOVLW  10
0102:  SUBWF  24,W
0103:  BTFSS  03.2
0104:  GOTO   0F9
0105:  MOVF   22,W
0106:  MOVWF  25
0107:  MOVLW  1F
0108:  MOVWF  26
0109:  CALL   059
010A:  MOVLW  12
010B:  MOVWF  25
010C:  MOVF   25,W
010D:  CALL   004
010E:  INCF   25,F
010F:  MOVWF  77
0110:  MOVF   77,W
0111:  BTFSS  0C.4
0112:  GOTO   111
0113:  MOVWF  19
0114:  MOVLW  1B
0115:  SUBWF  25,W
0116:  BTFSS  03.2
0117:  GOTO   10C
....................             output_bit(pin_a0, 0); 
0118:  BCF    05.0
0119:  BSF    03.5
011A:  BCF    05.0
....................          } else if (input(pin_a1)) { 
011B:  GOTO   145
011C:  BCF    03.5
011D:  BSF    03.5
011E:  BSF    05.1
011F:  BCF    03.5
0120:  BTFSS  05.1
0121:  GOTO   146
....................             printf("Pressionou 'A1' %d vezes!\r\n", countA1); 
0122:  CLRF   24
0123:  MOVF   24,W
0124:  CALL   024
0125:  INCF   24,F
0126:  MOVWF  77
0127:  MOVF   77,W
0128:  BTFSS  0C.4
0129:  GOTO   128
012A:  MOVWF  19
012B:  MOVLW  10
012C:  SUBWF  24,W
012D:  BTFSS  03.2
012E:  GOTO   123
012F:  MOVF   23,W
0130:  MOVWF  25
0131:  MOVLW  1F
0132:  MOVWF  26
0133:  CALL   059
0134:  MOVLW  12
0135:  MOVWF  25
0136:  MOVF   25,W
0137:  CALL   024
0138:  INCF   25,F
0139:  MOVWF  77
013A:  MOVF   77,W
013B:  BTFSS  0C.4
013C:  GOTO   13B
013D:  MOVWF  19
013E:  MOVLW  1B
013F:  SUBWF  25,W
0140:  BTFSS  03.2
0141:  GOTO   136
....................             output_bit(pin_a1, 0); 
0142:  BCF    05.1
0143:  BSF    03.5
0144:  BCF    05.1
0145:  BCF    03.5
....................          } 
....................           
....................           
....................       } 
....................     
....................    } 
0146:  GOTO   0DA
....................  
.................... } 
0147:  SLEEP

Configuration Fuses:
   Word  1: 1F71   XT NOWDT PUT PROTECT NODEBUG BROWNOUT NOLVP NOCPD NOWRT
