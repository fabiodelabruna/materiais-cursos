CCS PCM C Compiler, Version 4.038, 33467               28-out-10 09:15

               Filename: C:\Users\Fabio Dela Bruna\Documents\Curso de Ciência da Computação\8º Semestre\Programação para Microcontroladores - Prof. Fernando Kestering Longo\Exercícios\Manipulacao_Bit_Byte\teste_rotate.lst

               ROM used: 57 words (1%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         9 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01B
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses XT, PROTECT 
.................... #use delay(clock=4MHz) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  BCF    0A.3
0019:  BCF    0A.4
001A:  GOTO   030 (RETURN)
....................  
....................  
.................... void main() { 
001B:  CLRF   04
001C:  BCF    03.7
001D:  MOVLW  1F
001E:  ANDWF  03,F
001F:  BSF    03.5
0020:  BSF    1F.0
0021:  BSF    1F.1
0022:  BSF    1F.2
0023:  BCF    1F.3
0024:  MOVLW  07
0025:  MOVWF  1C
....................  
....................    byte var = 0b10100100; 
0026:  MOVLW  A4
0027:  BCF    03.5
0028:  MOVWF  21
....................     
....................    while (true) { 
....................     
....................       /* 
....................       // rotaciona x quantidade de bits para a esquerda - nesse caso, de bit em bit, pois o parâmetro é 1 
....................       rotate_left(&var,1); 
....................       delay_ms(1000); 
....................       output_b(var); 
....................       */ 
....................        
....................       // rotaciona x quantidade de bits para a direita - nesse caso, de bit em bit, pois o parâmetro é 1 
....................       rotate_right(&var,1); 
0029:  RRF    21,W
002A:  RRF    21,F
....................       delay_ms(1000); 
002B:  MOVLW  04
002C:  MOVWF  22
002D:  MOVLW  FA
002E:  MOVWF  23
002F:  GOTO   004
0030:  DECFSZ 22,F
0031:  GOTO   02D
....................       output_b(var); 
0032:  BSF    03.5
0033:  CLRF   06
0034:  BCF    03.5
0035:  MOVF   21,W
0036:  MOVWF  06
....................        
....................    } 
0037:  GOTO   029
....................  
.................... } 
0038:  SLEEP

Configuration Fuses:
   Word  1: 1F71   XT NOWDT PUT PROTECT NODEBUG BROWNOUT NOLVP NOCPD NOWRT
