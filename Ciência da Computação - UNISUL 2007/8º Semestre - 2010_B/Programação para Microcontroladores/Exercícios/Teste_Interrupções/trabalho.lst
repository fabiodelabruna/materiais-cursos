CCS PCM C Compiler, Version 4.038, 33467               25-nov-10 10:03

               Filename: C:\Users\Fabio Dela Bruna\Documents\Curso de Ciência da Computação\8º Semestre\Programação para Microcontroladores - Prof. Fernando Kestering Longo\Exercícios\Teste_Interrupções\trabalho.lst

               ROM used: 461 words (6%)
                         Largest free fragment is 2048
               RAM used: 19 (5%) at main() level
                         21 (6%) worst case
               Stack:    3 worst case (1 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   16F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.3
001A:  GOTO   01D
001B:  BTFSC  0B.0
001C:  GOTO   030
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   27,W
0028:  MOVWF  7B
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   0CB
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses XT, PROTECT 
.................... #use delay(clock=4MHz) 
*
015A:  MOVLW  2D
015B:  MOVWF  04
015C:  BCF    03.7
015D:  MOVF   00,W
015E:  BTFSC  03.2
015F:  GOTO   16E
0160:  MOVLW  01
0161:  MOVWF  78
0162:  CLRF   77
0163:  DECFSZ 77,F
0164:  GOTO   163
0165:  DECFSZ 78,F
0166:  GOTO   162
0167:  MOVLW  4A
0168:  MOVWF  77
0169:  DECFSZ 77,F
016A:  GOTO   169
016B:  GOTO   16C
016C:  DECFSZ 00,F
016D:  GOTO   160
016E:  RETLW  00
.................... #use rs232(baud=9600,xmit=pin_c6,rcv=pin_c7) 
....................  
.................... #define TIME_DELAY 500 
....................  
.................... int old_values[4]; 
....................  
.................... #int_rb  
.................... void interrupt_on_change() { 
....................     
....................    if(old_values[0] != input(pin_b4)) { 
*
00CB:  BSF    03.5
00CC:  BSF    06.4
00CD:  MOVLW  00
00CE:  BCF    03.5
00CF:  BTFSC  06.4
00D0:  MOVLW  01
00D1:  SUBWF  28,W
00D2:  BTFSC  03.2
00D3:  GOTO   0EE
....................       printf("%s\r\n", "Pino B4 sofreu mudança de estado!"); 
00D4:  CLRF   2E
00D5:  MOVF   2E,W
00D6:  CALL   033
00D7:  IORLW  00
00D8:  BTFSC  03.2
00D9:  GOTO   0DF
00DA:  INCF   2E,F
00DB:  BTFSS  0C.4
00DC:  GOTO   0DB
00DD:  MOVWF  19
00DE:  GOTO   0D5
00DF:  MOVLW  0D
00E0:  BTFSS  0C.4
00E1:  GOTO   0E0
00E2:  MOVWF  19
00E3:  MOVLW  0A
00E4:  BTFSS  0C.4
00E5:  GOTO   0E4
00E6:  MOVWF  19
....................       old_values[0] = input(pin_b4); 
00E7:  BSF    03.5
00E8:  BSF    06.4
00E9:  BCF    03.5
00EA:  CLRF   28
00EB:  BTFSC  06.4
00EC:  INCF   28,F
....................    } else if(old_values[1] != input(pin_b5)) { 
00ED:  GOTO   156
00EE:  BSF    03.5
00EF:  BSF    06.5
00F0:  MOVLW  00
00F1:  BCF    03.5
00F2:  BTFSC  06.5
00F3:  MOVLW  01
00F4:  SUBWF  29,W
00F5:  BTFSC  03.2
00F6:  GOTO   111
....................       printf("%s\r\n", "Pino B5 sofreu mudança de estado!"); 
00F7:  CLRF   2E
00F8:  MOVF   2E,W
00F9:  CALL   059
00FA:  IORLW  00
00FB:  BTFSC  03.2
00FC:  GOTO   102
00FD:  INCF   2E,F
00FE:  BTFSS  0C.4
00FF:  GOTO   0FE
0100:  MOVWF  19
0101:  GOTO   0F8
0102:  MOVLW  0D
0103:  BTFSS  0C.4
0104:  GOTO   103
0105:  MOVWF  19
0106:  MOVLW  0A
0107:  BTFSS  0C.4
0108:  GOTO   107
0109:  MOVWF  19
....................       old_values[1] = input(pin_b5); 
010A:  BSF    03.5
010B:  BSF    06.5
010C:  BCF    03.5
010D:  CLRF   29
010E:  BTFSC  06.5
010F:  INCF   29,F
....................    } else if(old_values[2] != input(pin_b6)) { 
0110:  GOTO   156
0111:  BSF    03.5
0112:  BSF    06.6
0113:  MOVLW  00
0114:  BCF    03.5
0115:  BTFSC  06.6
0116:  MOVLW  01
0117:  SUBWF  2A,W
0118:  BTFSC  03.2
0119:  GOTO   134
....................       printf("%s\r\n", "Pino B6 sofreu mudança de estado!"); 
011A:  CLRF   2E
011B:  MOVF   2E,W
011C:  CALL   07F
011D:  IORLW  00
011E:  BTFSC  03.2
011F:  GOTO   125
0120:  INCF   2E,F
0121:  BTFSS  0C.4
0122:  GOTO   121
0123:  MOVWF  19
0124:  GOTO   11B
0125:  MOVLW  0D
0126:  BTFSS  0C.4
0127:  GOTO   126
0128:  MOVWF  19
0129:  MOVLW  0A
012A:  BTFSS  0C.4
012B:  GOTO   12A
012C:  MOVWF  19
....................       old_values[2] = input(pin_b6); 
012D:  BSF    03.5
012E:  BSF    06.6
012F:  BCF    03.5
0130:  CLRF   2A
0131:  BTFSC  06.6
0132:  INCF   2A,F
....................    } else if(old_values[3] != input(pin_b7)) { 
0133:  GOTO   156
0134:  BSF    03.5
0135:  BSF    06.7
0136:  MOVLW  00
0137:  BCF    03.5
0138:  BTFSC  06.7
0139:  MOVLW  01
013A:  SUBWF  2B,W
013B:  BTFSC  03.2
013C:  GOTO   156
....................       printf("%s\r\n", "Pino B7 sofreu mudança de estado!"); 
013D:  CLRF   2E
013E:  MOVF   2E,W
013F:  CALL   0A5
0140:  IORLW  00
0141:  BTFSC  03.2
0142:  GOTO   148
0143:  INCF   2E,F
0144:  BTFSS  0C.4
0145:  GOTO   144
0146:  MOVWF  19
0147:  GOTO   13E
0148:  MOVLW  0D
0149:  BTFSS  0C.4
014A:  GOTO   149
014B:  MOVWF  19
014C:  MOVLW  0A
014D:  BTFSS  0C.4
014E:  GOTO   14D
014F:  MOVWF  19
....................       old_values[3] = input(pin_b7); 
0150:  BSF    03.5
0151:  BSF    06.7
0152:  BCF    03.5
0153:  CLRF   2B
0154:  BTFSC  06.7
0155:  INCF   2B,F
....................    } 
....................     
.................... } 
....................  
....................  
0156:  BCF    0B.0
0157:  BCF    0A.3
0158:  BCF    0A.4
0159:  GOTO   01D
.................... void main() { 
*
016F:  CLRF   04
0170:  BCF    03.7
0171:  MOVLW  1F
0172:  ANDWF  03,F
0173:  MOVLW  19
0174:  BSF    03.5
0175:  MOVWF  19
0176:  MOVLW  A6
0177:  MOVWF  18
0178:  MOVLW  90
0179:  BCF    03.5
017A:  MOVWF  18
017B:  BSF    03.5
017C:  BSF    1F.0
017D:  BSF    1F.1
017E:  BSF    1F.2
017F:  BCF    1F.3
0180:  MOVLW  07
0181:  MOVWF  1C
....................  
....................    old_values[0] = input(pin_b4); 
0182:  BSF    06.4
0183:  BCF    03.5
0184:  CLRF   28
0185:  BTFSC  06.4
0186:  INCF   28,F
....................    old_values[1] = input(pin_b5); 
0187:  BSF    03.5
0188:  BSF    06.5
0189:  BCF    03.5
018A:  CLRF   29
018B:  BTFSC  06.5
018C:  INCF   29,F
....................    old_values[2] = input(pin_b6); 
018D:  BSF    03.5
018E:  BSF    06.6
018F:  BCF    03.5
0190:  CLRF   2A
0191:  BTFSC  06.6
0192:  INCF   2A,F
....................    old_values[3] = input(pin_b7); 
0193:  BSF    03.5
0194:  BSF    06.7
0195:  BCF    03.5
0196:  CLRF   2B
0197:  BTFSC  06.7
0198:  INCF   2B,F
....................     
....................    enable_interrupts(global | int_rb); 
0199:  MOVLW  C8
019A:  BSF    03.6
019B:  IORWF  0B,F
....................     
....................    while(true) { 
....................       output_bit(pin_d7, 1); 
019C:  BCF    03.6
019D:  BSF    08.7
019E:  BSF    03.5
019F:  BCF    08.7
....................       delay_ms(TIME_DELAY); 
01A0:  MOVLW  02
01A1:  BCF    03.5
01A2:  MOVWF  2C
01A3:  MOVLW  FA
01A4:  MOVWF  2D
01A5:  CALL   15A
01A6:  DECFSZ 2C,F
01A7:  GOTO   1A3
....................       output_bit(pin_d7, 0); 
01A8:  BCF    08.7
01A9:  BSF    03.5
01AA:  BCF    08.7
....................       output_bit(pin_d6, 1); 
01AB:  BCF    03.5
01AC:  BSF    08.6
01AD:  BSF    03.5
01AE:  BCF    08.6
....................       delay_ms(TIME_DELAY); 
01AF:  MOVLW  02
01B0:  BCF    03.5
01B1:  MOVWF  2C
01B2:  MOVLW  FA
01B3:  MOVWF  2D
01B4:  CALL   15A
01B5:  DECFSZ 2C,F
01B6:  GOTO   1B2
....................       output_bit(pin_d6, 0); 
01B7:  BCF    08.6
01B8:  BSF    03.5
01B9:  BCF    08.6
....................       output_bit(pin_d5, 1); 
01BA:  BCF    03.5
01BB:  BSF    08.5
01BC:  BSF    03.5
01BD:  BCF    08.5
....................       delay_ms(TIME_DELAY); 
01BE:  MOVLW  02
01BF:  BCF    03.5
01C0:  MOVWF  2C
01C1:  MOVLW  FA
01C2:  MOVWF  2D
01C3:  CALL   15A
01C4:  DECFSZ 2C,F
01C5:  GOTO   1C1
....................       output_bit(pin_d5, 0); 
01C6:  BCF    08.5
01C7:  BSF    03.5
01C8:  BCF    08.5
....................    } 
01C9:  BCF    03.5
01CA:  BSF    03.6
01CB:  GOTO   19C
....................  
.................... } 
01CC:  SLEEP

Configuration Fuses:
   Word  1: 1F71   XT NOWDT PUT PROTECT NODEBUG BROWNOUT NOLVP NOCPD NOWRT
