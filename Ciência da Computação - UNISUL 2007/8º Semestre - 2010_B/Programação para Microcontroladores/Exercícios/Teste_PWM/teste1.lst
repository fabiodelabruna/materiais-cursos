CCS PCM C Compiler, Version 4.093, 5065               16-Eyl-10 09:21

               Filename: C:\PIC C Compiler PCWHD_4.093\PIC\Exercícios\Teste_PWM\teste1.lst

               ROM used: 47 words (1%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         7 (2%) worst case
               Stack:    0 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #fuses XT, PROTECT, BROWNOUT  
.................... #use delay(clock=4Mhz) 
.................... #use rs232(baud=9600,xmit=pin_c6,rcv=pin_c7) 
....................  
.................... void main() { 
*
0004:  CLRF   04
0005:  BCF    03.7
0006:  MOVLW  1F
0007:  ANDWF  03,F
0008:  MOVLW  19
0009:  BSF    03.5
000A:  MOVWF  19
000B:  MOVLW  A6
000C:  MOVWF  18
000D:  MOVLW  90
000E:  BCF    03.5
000F:  MOVWF  18
0010:  BSF    03.5
0011:  BSF    1F.0
0012:  BSF    1F.1
0013:  BSF    1F.2
0014:  BCF    1F.3
0015:  MOVLW  07
0016:  MOVWF  1C
....................    setup_ccp1(CCP_PWM); 
*
001A:  BCF    20.2
001B:  MOVF   20,W
001C:  BSF    03.5
001D:  MOVWF  07
001E:  BCF    03.5
001F:  BCF    07.2
0020:  MOVLW  0C
0021:  MOVWF  17
....................     
....................    // frequencia=5Khz 
....................    // PWM=(PR2+1)*4*Tosc*TMR2 Prescale 
....................    // 1/5Khz=(PR2+1)*4*(1/4.000.000)*4 
....................    // 0,0000002=(PR2+1)*4*0,00000025*4 
....................    // 0,0000002=(PR2+1)0,000004 
....................    // PR2=20-1 = 19 Período 
....................    setup_timer_2(T2_DIV_BY_4,19,1); 
0022:  MOVLW  00
0023:  MOVWF  78
0024:  IORLW  05
0025:  MOVWF  12
0026:  MOVLW  13
0027:  BSF    03.5
0028:  MOVWF  12
....................     
....................    // resolucao 
....................    // 1/F_PWM=2^pwm_resolution*4*(Tosc)*Prescale 
....................    // 1/5Khz=2^pwm_resolution*4*(1/4.000.000)*4 
....................    // 0.2=2^pwm_resolution*0,000004 
....................    // log(50000)=pwm_resolution*log(2) 
....................    // 4.7pwm_resolution*0,3 
....................    // aproximadamente 15 bits 
....................     
....................    // duty_cycle=Fosc*(F_PWM*TRM2 Prescale) 
....................    // duty_cycle=4.000.000(5.000*4) 
....................    // duty_cycle_maximo=200 
....................    while(true) { 
....................       set_pwm1_duty(5); 
0029:  MOVLW  05
002A:  BCF    03.5
002B:  MOVWF  15
....................    } 
002C:  BSF    03.5
002D:  GOTO   029
....................  
....................  
.................... } 
002E:  SLEEP

Configuration Fuses:
   Word  1: 1F71   XT NOWDT PUT PROTECT NODEBUG BROWNOUT NOLVP NOCPD NOWRT
