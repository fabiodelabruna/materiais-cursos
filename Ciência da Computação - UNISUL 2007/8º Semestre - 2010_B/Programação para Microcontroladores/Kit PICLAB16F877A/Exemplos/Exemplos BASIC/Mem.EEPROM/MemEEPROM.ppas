{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*           Programação Em Pascal - Módulo B PIC16F877A       *
*                             Exemplo 7                       *
*                                                             *
*             CENTRO DE TREINAMENTO - Ápice Tecnologia        *
*                                                             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   VERSÃO : 1.0
*   DATA : 22/07/2005
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                         Descrição geral                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 Este exemplo irá demonstrar a utilização da memória
 EEPROM interna do PIC. Para isso, iremos implementar
 um contador no barramento de leds e assim que o sistema
 acordar, o mesmo lerá a memória e carregará o dado
 novamente no barramento}

program MemEEPROM;       //Definição do programa

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*             Definição e inicialização das variáveis         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir as variáveis globais do sistema}

var
   dado:byte;
   
{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **
*                      Declaração de Labels                   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir todos os labels utilizadas pelo sistema}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **
*                      Constantes internas                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir as constantes utilizadas pelo sistema}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                Declaração dos flags de software             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir os flags utilizados no sistema   }

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*               Declaração das saídas do software             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*               Declaração das entradas do software           *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*               Declaração de Rotinas e Interrupções          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                       Início do programa                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Nessa parte ficará o loop principal do sistema}

begin

   portb:=0;
   trisb:=%00000000;            //inicializa o barramento
   trisd:=%00000000;            //configura i/o do sistema
   adcon1:=7;                   //desliga a/d
   option_reg:=%10000000;       //configura prescaler do timer 0
   dado:=eeprom_read(0);        //lê a posição zero de memória e carrega no barramento

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                       Rotina Principal                      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

     while true do
      begin
       portb.5:=1;                //liga a saída de leds
       portd:=dado;               //atualiza a saída de leds
       delay_ms(500);             //aguarda 1000ms

       portb.5:=0;                //desliga saída de leds
       portd:=%11111110;          //seleciona linha 1 do teclado matricial
       delay_us(10);              //tempo de acomodação

       if porta.4=0 then          //se o botão estiver pressioando...
        begin
           dado:=dado+1;          //incrementa o dado
           eeprom_write(0,dado);  //atualiza a eeprom
        end;

        if porta.5=0 then         //se o botão estiver pressioando...
        begin
           dado:=dado-1;          //decrementa o dado
           eeprom_write(0,dado);  //atualiza a eeprom
        end;
        
      end;

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                       Fim do programa                       *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

    end.
