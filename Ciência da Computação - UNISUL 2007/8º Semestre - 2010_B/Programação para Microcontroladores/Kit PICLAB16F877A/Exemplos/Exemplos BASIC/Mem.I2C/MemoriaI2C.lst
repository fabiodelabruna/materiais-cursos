;  ASM code generated by mikroVirtualMachine for PIC - V. 5.0.0.2
;  Date/Time: 30/05/06 14:55:50
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2A4E			GOTO	MemoriaI2C_main
$0004	$	i2clib_i_a_i2c_is_idle:
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$01D4			CLRF	i2clib_i_a_i2c_is_idle_local_result, 1
$0007	$3000			MOVLW	0
$0008	$1683			BSF	STATUS, RP0
$0009	$1914			BTFSC	SSPSTAT, 2
$000A	$3001			MOVLW	1
$000B	$00F1			MOVWF	STACK_1
$000C	$0871			MOVF	STACK_1, 0
$000D	$3A00			XORLW	0
$000E	$1D03			BTFSS	STATUS, Z
$000F	$281C			GOTO	i2clib_i_a_L_3
$0010	$	i2clib_i_a_L_2:
$0010	$301F			MOVLW	31
$0011	$0511			ANDWF	SSPCON2, 0
$0012	$00F1			MOVWF	STACK_1
$0013	$0871			MOVF	STACK_1, 0
$0014	$3A00			XORLW	0
$0015	$1D03			BTFSS	STATUS, Z
$0016	$281A			GOTO	i2clib_i_a_L_6
$0017	$	i2clib_i_a_L_5:
$0017	$3001			MOVLW	1
$0018	$1283			BCF	STATUS, RP0
$0019	$00D4			MOVWF	i2clib_i_a_i2c_is_idle_local_result
$001A	$	i2clib_i_a_L_6:
$001A	$	i2clib_i_a_L_7:
$001A	$1303			BCF	STATUS, RP1
$001B	$1283			BCF	STATUS, RP0
$001C	$	i2clib_i_a_L_3:
$001C	$	i2clib_i_a_L_4:
$001C	$	i2clib_i_a_L_1:
$001C	$1303			BCF	STATUS, RP1
$001D	$1283			BCF	STATUS, RP0
$001E	$0854			MOVF	i2clib_i_a_i2c_is_idle_local_result, 0
$001F	$00F0			MOVWF	STACK_0
$0020	$0008			RETURN
$0021	$	delays_delay_1us:
^delays.pbas, 5 :: 		sub procedure Delay_1us
^delays.pbas, 6 :: 		Delay_us(1)
$0021	$0000			NOP
$0022	$	delays_L_0:
$0022	$0008			RETURN
$0023	$	delays_delay_5500us:
^delays.pbas, 29 :: 		sub procedure Delay_5500us
^delays.pbas, 30 :: 		Delay_us(5500)
$0023	$3008			MOVLW	8
$0024	$1303			BCF	STATUS, RP1
$0025	$1283			BCF	STATUS, RP0
$0026	$00FB			MOVWF	STACK_11
$0027	$30FF			MOVLW	255
$0028	$00FA			MOVWF	STACK_10
$0029	$0BFB			DECFSZ	STACK_11, F
$002A	$282C			GOTO	$+2
$002B	$282F			GOTO	$+4
$002C	$0BFA			DECFSZ	STACK_10, F
$002D	$282C			GOTO	$-1
$002E	$2829			GOTO	$-5
$002F	$301E			MOVLW	30
$0030	$00FA			MOVWF	STACK_10
$0031	$0BFA			DECFSZ	STACK_10, F
$0032	$2831			GOTO	$-1
$0033	$	delays_L_6:
$0033	$0008			RETURN
$0034	$	delays_delay_500us:
^delays.pbas, 25 :: 		sub procedure Delay_500us
^delays.pbas, 26 :: 		Delay_us(498)
$0034	$30A5			MOVLW	165
$0035	$1303			BCF	STATUS, RP1
$0036	$1283			BCF	STATUS, RP0
$0037	$00FA			MOVWF	STACK_10
$0038	$0BFA			DECFSZ	STACK_10, F
$0039	$2838			GOTO	$-1
$003A	$0000			NOP
$003B	$0000			NOP
$003C	$	delays_L_5:
$003C	$0008			RETURN
$003D	$	i2clib_i_a_i2c_start:
$003D	$1303			BCF	STATUS, RP1
$003E	$1283			BCF	STATUS, RP0
$003F	$01D0			CLRF	i2clib_i_a_i2c_start_local_j
$0040	$01D1			CLRF	i2clib_i_a_i2c_start_local_j+1
$0041	$308F			MOVLW	143
$0042	$00D2			MOVWF	FLOC_I2C_start+3
$0043	$3012			MOVLW	18
$0044	$00D3			MOVWF	FLOC_I2C_start+4
$0045	$	i2clib_i_a_L_9:
$0045	$0853			MOVF	FLOC_I2C_start+4, 0
$0046	$3C00			SUBLW	0
$0047	$1D03			BTFSS	STATUS, Z
$0048	$284B			GOTO	L_I2C_start_0
$0049	$0852			MOVF	FLOC_I2C_start+3, 0
$004A	$3C00			SUBLW	0
$004B	$	L_I2C_start_0:
$004B	$1803			BTFSC	STATUS, C
$004C	$285B			GOTO	i2clib_i_a_L_12
$004D	$	i2clib_i_a_L_11:
$004D	$2004			CALL	i2clib_i_a_i2c_is_idle
$004E	$0870			MOVF	STACK_0, 0
$004F	$3A01			XORLW	1
$0050	$1D03			BTFSS	STATUS, Z
$0051	$2853			GOTO	i2clib_i_a_L_14
$0052	$	i2clib_i_a_L_13:
$0052	$285B			GOTO	i2clib_i_a_L_12
$0053	$	i2clib_i_a_L_14:
$0053	$	i2clib_i_a_L_15:
$0053	$	i2clib_i_a_L_10:
$0053	$0AD0			INCF	i2clib_i_a_i2c_start_local_j, 1
$0054	$1903			BTFSC	STATUS, Z
$0055	$0AD1			INCF	i2clib_i_a_i2c_start_local_j+1, 1
$0056	$3001			MOVLW	1
$0057	$02D2			SUBWF	FLOC_I2C_start+3, 1
$0058	$1C03			BTFSS	STATUS, C
$0059	$03D3			DECF	FLOC_I2C_start+4, 1
$005A	$2845			GOTO	i2clib_i_a_L_9
$005B	$	i2clib_i_a_L_12:
$005B	$3012			MOVLW	18
$005C	$0251			SUBWF	i2clib_i_a_i2c_start_local_j+1, 0
$005D	$1D03			BTFSS	STATUS, Z
$005E	$2861			GOTO	L_I2C_start_1
$005F	$308F			MOVLW	143
$0060	$0250			SUBWF	i2clib_i_a_i2c_start_local_j, 0
$0061	$	L_I2C_start_1:
$0061	$1C03			BTFSS	STATUS, C
$0062	$2866			GOTO	i2clib_i_a_L_17
$0063	$	i2clib_i_a_L_16:
$0063	$307B			MOVLW	123
$0064	$00CF			MOVWF	i2clib_i_a_i2c_start_local_result
$0065	$2873			GOTO	i2clib_i_a_L_18
$0066	$	i2clib_i_a_L_17:
$0066	$1683			BSF	STATUS, RP0
$0067	$1411			BSF	SSPCON2, 0
$0068	$	i2clib_i_a_L_20:
$0068	$3001			MOVLW	1
$0069	$0511			ANDWF	SSPCON2, 0
$006A	$00F1			MOVWF	STACK_1
$006B	$0871			MOVF	STACK_1, 0
$006C	$3A01			XORLW	1
$006D	$1D03			BTFSS	STATUS, Z
$006E	$2871			GOTO	i2clib_i_a_L_21
$006F	$0000			NOP
$0070	$2868			GOTO	i2clib_i_a_L_20
$0071	$	i2clib_i_a_L_21:
$0071	$1283			BCF	STATUS, RP0
$0072	$01CF			CLRF	i2clib_i_a_i2c_start_local_result, 1
$0073	$	i2clib_i_a_L_18:
$0073	$	i2clib_i_a_L_8:
$0073	$084F			MOVF	i2clib_i_a_i2c_start_local_result, 0
$0074	$00F0			MOVWF	STACK_0
$0075	$0008			RETURN
$0076	$	i2clib_i_a_i2c_wr:
$0076	$1303			BCF	STATUS, RP1
$0077	$1283			BCF	STATUS, RP0
$0078	$084F			MOVF	FARG_I2C_Wr, 0
$0079	$0093			MOVWF	SSPBUF
$007A	$	i2clib_i_a_L_32:
$007A	$3000			MOVLW	0
$007B	$1683			BSF	STATUS, RP0
$007C	$1914			BTFSC	SSPSTAT, 2
$007D	$3001			MOVLW	1
$007E	$00F1			MOVWF	STACK_1
$007F	$0871			MOVF	STACK_1, 0
$0080	$3A00			XORLW	0
$0081	$1903			BTFSC	STATUS, Z
$0082	$2885			GOTO	i2clib_i_a_L_33
$0083	$0000			NOP
$0084	$287A			GOTO	i2clib_i_a_L_32
$0085	$	i2clib_i_a_L_33:
$0085	$3000			MOVLW	0
$0086	$1B11			BTFSC	SSPCON2, 6
$0087	$3001			MOVLW	1
$0088	$00F1			MOVWF	STACK_1
$0089	$0871			MOVF	STACK_1, 0
$008A	$3A00			XORLW	0
$008B	$1D03			BTFSS	STATUS, Z
$008C	$2890			GOTO	i2clib_i_a_L_37
$008D	$	i2clib_i_a_L_36:
$008D	$1283			BCF	STATUS, RP0
$008E	$01D0			CLRF	i2clib_i_a_i2c_wr_local_result, 1
$008F	$2895			GOTO	i2clib_i_a_L_38
$0090	$	i2clib_i_a_L_37:
$0090	$1683			BSF	STATUS, RP0
$0091	$1511			BSF	SSPCON2, 2
$0092	$3002			MOVLW	2
$0093	$1283			BCF	STATUS, RP0
$0094	$00D0			MOVWF	i2clib_i_a_i2c_wr_local_result
$0095	$	i2clib_i_a_L_38:
$0095	$	i2clib_i_a_L_30:
$0095	$0850			MOVF	i2clib_i_a_i2c_wr_local_result, 0
$0096	$00F0			MOVWF	STACK_0
$0097	$0008			RETURN
$0098	$	i2clib_i_a_i2c_repeated_start:
$0098	$1303			BCF	STATUS, RP1
$0099	$1683			BSF	STATUS, RP0
$009A	$1491			BSF	SSPCON2, 1
$009B	$	i2clib_i_a_L_26:
$009B	$3000			MOVLW	0
$009C	$1891			BTFSC	SSPCON2, 1
$009D	$3001			MOVLW	1
$009E	$00F1			MOVWF	STACK_1
$009F	$0871			MOVF	STACK_1, 0
$00A0	$3A00			XORLW	0
$00A1	$1903			BTFSC	STATUS, Z
$00A2	$28A5			GOTO	i2clib_i_a_L_27
$00A3	$0000			NOP
$00A4	$289B			GOTO	i2clib_i_a_L_26
$00A5	$	i2clib_i_a_L_27:
$00A5	$	i2clib_i_a_L_24:
$00A5	$0008			RETURN
$00A6	$	i2clib_i_a_i2c_rd:
$00A6	$1303			BCF	STATUS, RP1
$00A7	$1683			BSF	STATUS, RP0
$00A8	$1591			BSF	SSPCON2, 3
$00A9	$	i2clib_i_a_L_42:
$00A9	$3000			MOVLW	0
$00AA	$1991			BTFSC	SSPCON2, 3
$00AB	$3001			MOVLW	1
$00AC	$00F1			MOVWF	STACK_1
$00AD	$0871			MOVF	STACK_1, 0
$00AE	$3A01			XORLW	1
$00AF	$1D03			BTFSS	STATUS, Z
$00B0	$28B3			GOTO	i2clib_i_a_L_43
$00B1	$0000			NOP
$00B2	$28A9			GOTO	i2clib_i_a_L_42
$00B3	$	i2clib_i_a_L_43:
$00B3	$1283			BCF	STATUS, RP0
$00B4	$0813			MOVF	SSPBUF, 0
$00B5	$00D0			MOVWF	i2clib_i_a_i2c_rd_local_result
$00B6	$1683			BSF	STATUS, RP0
$00B7	$1291			BCF	SSPCON2, 5
$00B8	$1283			BCF	STATUS, RP0
$00B9	$084F			MOVF	FARG_I2C_Rd, 0
$00BA	$3A00			XORLW	0
$00BB	$1D03			BTFSS	STATUS, Z
$00BC	$28BF			GOTO	i2clib_i_a_L_47
$00BD	$	i2clib_i_a_L_46:
$00BD	$1683			BSF	STATUS, RP0
$00BE	$1691			BSF	SSPCON2, 5
$00BF	$	i2clib_i_a_L_47:
$00BF	$	i2clib_i_a_L_48:
$00BF	$1303			BCF	STATUS, RP1
$00C0	$1683			BSF	STATUS, RP0
$00C1	$1611			BSF	SSPCON2, 4
$00C2	$	i2clib_i_a_L_40:
$00C2	$1283			BCF	STATUS, RP0
$00C3	$0850			MOVF	i2clib_i_a_i2c_rd_local_result, 0
$00C4	$00F0			MOVWF	STACK_0
$00C5	$0008			RETURN
$00C6	$	i2clib_i_a_i2c_stop:
$00C6	$1303			BCF	STATUS, RP1
$00C7	$1683			BSF	STATUS, RP0
$00C8	$1511			BSF	SSPCON2, 2
$00C9	$	i2clib_i_a_L_39:
$00C9	$0008			RETURN
$00CA	$	lcd8bit_lcd8_cmd:
$00CA	$1303			BCF	STATUS, RP1
$00CB	$1283			BCF	STATUS, RP0
$00CC	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$00CD	$0084			MOVWF	FSR
$00CE	$0180			CLRF	INDF, 1
$00CF	$1BCF			BTFSC	FARG_LCD8_CMD, 7
$00D0	$1780			BSF	INDF, __LCD8_DB7
$00D1	$1B4F			BTFSC	FARG_LCD8_CMD, 6
$00D2	$1700			BSF	INDF, __LCD8_DB6
$00D3	$1ACF			BTFSC	FARG_LCD8_CMD, 5
$00D4	$1680			BSF	INDF, __LCD8_DB5
$00D5	$1A4F			BTFSC	FARG_LCD8_CMD, 4
$00D6	$1600			BSF	INDF, __LCD8_DB4
$00D7	$19CF			BTFSC	FARG_LCD8_CMD, 3
$00D8	$1580			BSF	INDF, __LCD8_DB3
$00D9	$194F			BTFSC	FARG_LCD8_CMD, 2
$00DA	$1500			BSF	INDF, __LCD8_DB2
$00DB	$18CF			BTFSC	FARG_LCD8_CMD, 1
$00DC	$1480			BSF	INDF, __LCD8_DB1
$00DD	$184F			BTFSC	FARG_LCD8_CMD, 0
$00DE	$1400			BSF	INDF, __LCD8_DB0
$00DF	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$00E0	$0084			MOVWF	FSR
$00E1	$0822			MOVF	lcd8bit_main_global_com, 0
$00E2	$3A01			XORLW	1
$00E3	$1D03			BTFSS	STATUS, Z
$00E4	$28E7			GOTO	lcd8bit_L_2
$00E5	$	lcd8bit_L_1:
$00E5	$1100			BCF	INDF, __LCD8_RS
$00E6	$28E8			GOTO	lcd8bit_L_3
$00E7	$	lcd8bit_L_2:
$00E7	$1500			BSF	INDF, __LCD8_RS
$00E8	$	lcd8bit_L_3:
$00E8	$1480			BSF	INDF, __LCD8_ENABLE
$00E9	$2021			CALL	delays_delay_1us
$00EA	$1080			BCF	INDF, __LCD8_ENABLE
$00EB	$0822			MOVF	lcd8bit_main_global_com, 0
$00EC	$3A01			XORLW	1
$00ED	$1D03			BTFSS	STATUS, Z
$00EE	$28F1			GOTO	lcd8bit_L_5
$00EF	$	lcd8bit_L_4:
$00EF	$2023			CALL	delays_delay_5500us
$00F0	$28F2			GOTO	lcd8bit_L_6
$00F1	$	lcd8bit_L_5:
$00F1	$2034			CALL	delays_delay_500us
$00F2	$	lcd8bit_L_6:
$00F2	$	lcd8bit_L_0:
$00F2	$0008			RETURN
$00F3	$	MemoriaI2C_le_i2c:
^MemoriaI2C.pbas, 67 :: 		dim aux as byte
^MemoriaI2C.pbas, 68 :: 		i2c_start           				'Condição de início
$00F3	$203D			CALL	i2clib_i_a_i2c_start
^MemoriaI2C.pbas, 69 :: 		i2c_wr(%10100000)		  		  'Envia um byte de escrita
$00F4	$30A0			MOVLW	160
$00F5	$00CF			MOVWF	FARG_I2C_Wr
$00F6	$2076			CALL	i2clib_i_a_i2c_wr
^MemoriaI2C.pbas, 70 :: 		i2c_wr(endereco)				    'Envia endereço
$00F7	$084C			MOVF	FARG_Le_I2C, 0
$00F8	$00CF			MOVWF	FARG_I2C_Wr
$00F9	$2076			CALL	i2clib_i_a_i2c_wr
^MemoriaI2C.pbas, 71 :: 		I2C_Repeated_Start					'Nova condição de início
$00FA	$2098			CALL	i2clib_i_a_i2c_repeated_start
^MemoriaI2C.pbas, 72 :: 		i2c_wr(%10100001)				    'Envia o byte de controle de leitura
$00FB	$30A1			MOVLW	161
$00FC	$1283			BCF	STATUS, RP0
$00FD	$00CF			MOVWF	FARG_I2C_Wr
$00FE	$2076			CALL	i2clib_i_a_i2c_wr
^MemoriaI2C.pbas, 73 :: 		aux=i2c_rd(0)         		  'lê o dado armazenado na E²PROM e envia nack
$00FF	$01CF			CLRF	FARG_I2C_Rd, 1
$0100	$20A6			CALL	i2clib_i_a_i2c_rd
$0101	$0870			MOVF	STACK_0, 0
$0102	$00CE			MOVWF	memoriai2c_le_i2c_local_aux
^MemoriaI2C.pbas, 74 :: 		i2c_stop	                  'Condição de parada
$0103	$20C6			CALL	i2clib_i_a_i2c_stop
^MemoriaI2C.pbas, 75 :: 		result=aux                  'retorna o dado lido
$0104	$1283			BCF	STATUS, RP0
$0105	$084E			MOVF	memoriai2c_le_i2c_local_aux, 0
$0106	$00CD			MOVWF	memoriai2c_le_i2c_local_result
$0107	$	MemoriaI2C_L_0:
$0107	$084D			MOVF	memoriai2c_le_i2c_local_result, 0
$0108	$00F0			MOVWF	STACK_0
$0109	$0008			RETURN
$010A	$	lcd8bit_lcd8_chr:
$010A	$	lcd8bit_L_10:
$010A	$1303			BCF	STATUS, RP1
$010B	$1283			BCF	STATUS, RP0
$010C	$084C			MOVF	FARG_Lcd8_Chr, 0
$010D	$3A01			XORLW	1
$010E	$1D03			BTFSS	STATUS, Z
$010F	$2913			GOTO	lcd8bit_L_11
$0110	$	lcd8bit_L_9:
$0110	$3080			MOVLW	128
$0111	$00CC			MOVWF	FARG_Lcd8_Chr
$0112	$292A			GOTO	lcd8bit_L_8
$0113	$	lcd8bit_L_11:
$0113	$	lcd8bit_L_13:
$0113	$084C			MOVF	FARG_Lcd8_Chr, 0
$0114	$3A02			XORLW	2
$0115	$1D03			BTFSS	STATUS, Z
$0116	$291A			GOTO	lcd8bit_L_14
$0117	$	lcd8bit_L_12:
$0117	$30C0			MOVLW	192
$0118	$00CC			MOVWF	FARG_Lcd8_Chr
$0119	$292A			GOTO	lcd8bit_L_8
$011A	$	lcd8bit_L_14:
$011A	$	lcd8bit_L_16:
$011A	$084C			MOVF	FARG_Lcd8_Chr, 0
$011B	$3A03			XORLW	3
$011C	$1D03			BTFSS	STATUS, Z
$011D	$2921			GOTO	lcd8bit_L_17
$011E	$	lcd8bit_L_15:
$011E	$3094			MOVLW	148
$011F	$00CC			MOVWF	FARG_Lcd8_Chr
$0120	$292A			GOTO	lcd8bit_L_8
$0121	$	lcd8bit_L_17:
$0121	$	lcd8bit_L_19:
$0121	$084C			MOVF	FARG_Lcd8_Chr, 0
$0122	$3A04			XORLW	4
$0123	$1D03			BTFSS	STATUS, Z
$0124	$2928			GOTO	lcd8bit_L_20
$0125	$	lcd8bit_L_18:
$0125	$30D4			MOVLW	212
$0126	$00CC			MOVWF	FARG_Lcd8_Chr
$0127	$292A			GOTO	lcd8bit_L_8
$0128	$	lcd8bit_L_20:
$0128	$3080			MOVLW	128
$0129	$00CC			MOVWF	FARG_Lcd8_Chr
$012A	$	lcd8bit_L_8:
$012A	$084D			MOVF	FARG_Lcd8_Chr+1, 0
$012B	$074C			ADDWF	FARG_Lcd8_Chr, 0
$012C	$00F0			MOVWF	STACK_0
$012D	$03F0			DECF	STACK_0, 1
$012E	$0870			MOVF	STACK_0, 0
$012F	$00CC			MOVWF	FARG_Lcd8_Chr
$0130	$0870			MOVF	STACK_0, 0
$0131	$00CF			MOVWF	FARG_Lcd8_Cmd
$0132	$20CA			CALL	lcd8bit_lcd8_cmd
$0133	$01A2			CLRF	lcd8bit_main_global_com, 1
$0134	$084E			MOVF	FARG_Lcd8_Chr+2, 0
$0135	$00CF			MOVWF	FARG_Lcd8_Cmd
$0136	$20CA			CALL	lcd8bit_lcd8_cmd
$0137	$3001			MOVLW	1
$0138	$00A2			MOVWF	lcd8bit_main_global_com
$0139	$	lcd8bit_L_7:
$0139	$0008			RETURN
$013A	$	MemoriaI2C_escrever_i2c:
^MemoriaI2C.pbas, 83 :: 		sub procedure Escrever_I2C(dim endereco,dado as byte)
^MemoriaI2C.pbas, 85 :: 		i2c_start			             'Condição de início
$013A	$203D			CALL	i2clib_i_a_i2c_start
^MemoriaI2C.pbas, 86 :: 		i2c_wr(%10100000) 	  	   'Envia o byte de e escrita
$013B	$30A0			MOVLW	160
$013C	$00CF			MOVWF	FARG_I2C_Wr
$013D	$2076			CALL	i2clib_i_a_i2c_wr
^MemoriaI2C.pbas, 87 :: 		i2c_wr(endereco)		   	   'Envia endereço
$013E	$084C			MOVF	FARG_Escrever_I2C, 0
$013F	$00CF			MOVWF	FARG_I2C_Wr
$0140	$2076			CALL	i2clib_i_a_i2c_wr
^MemoriaI2C.pbas, 88 :: 		i2c_wr(dado)	             'Escreve dado na E²PROM
$0141	$084D			MOVF	FARG_Escrever_I2C+1, 0
$0142	$00CF			MOVWF	FARG_I2C_Wr
$0143	$2076			CALL	i2clib_i_a_i2c_wr
^MemoriaI2C.pbas, 89 :: 		i2c_stop			       	     'Condição de parada
$0144	$20C6			CALL	i2clib_i_a_i2c_stop
^MemoriaI2C.pbas, 90 :: 		delay_ms(5)				         'espera a gravação estar completa
$0145	$3007			MOVLW	7
$0146	$00FB			MOVWF	STACK_11
$0147	$30FF			MOVLW	255
$0148	$00FA			MOVWF	STACK_10
$0149	$0BFB			DECFSZ	STACK_11, F
$014A	$294C			GOTO	$+2
$014B	$294F			GOTO	$+4
$014C	$0BFA			DECFSZ	STACK_10, F
$014D	$294C			GOTO	$-1
$014E	$2949			GOTO	$-5
$014F	$3078			MOVLW	120
$0150	$00FA			MOVWF	STACK_10
$0151	$0BFA			DECFSZ	STACK_10, F
$0152	$2951			GOTO	$-1
$0153	$0000			NOP
$0154	$0000			NOP
$0155	$	MemoriaI2C_L_1:
$0155	$0008			RETURN
$0156	$	lcd8bit_lcd8_init:
$0156	$2023			CALL	delays_delay_5500us
$0157	$2023			CALL	delays_delay_5500us
$0158	$2023			CALL	delays_delay_5500us
$0159	$0849			MOVF	FARG_Lcd8_Init+1, 0
$015A	$00A0			MOVWF	lcd8bit_main_global_dataaddress
$015B	$0848			MOVF	FARG_Lcd8_Init, 0
$015C	$00A1			MOVWF	lcd8bit_main_global_ctrladdress
$015D	$0849			MOVF	FARG_Lcd8_Init+1, 0
$015E	$0084			MOVWF	FSR
$015F	$1784			BSF	FSR, 7
$0160	$0180			CLRF	INDF, 1
$0161	$0848			MOVF	FARG_Lcd8_Init, 0
$0162	$0084			MOVWF	FSR
$0163	$1000			BCF	INDF, __LCD8_RW
$0164	$1784			BSF	FSR, 7
$0165	$1100			BCF	INDF, __LCD8_RS
$0166	$1000			BCF	INDF, __LCD8_RW
$0167	$1080			BCF	INDF, __LCD8_ENABLE
$0168	$1384			BCF	FSR, 7
$0169	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$016A	$0084			MOVWF	FSR
$016B	$3030			MOVLW	48
$016C	$0080			MOVWF	INDF
$016D	$2023			CALL	delays_delay_5500us
$016E	$2023			CALL	delays_delay_5500us
$016F	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$0170	$0084			MOVWF	FSR
$0171	$1480			BSF	INDF, __LCD8_ENABLE
$0172	$2021			CALL	delays_delay_1us
$0173	$1080			BCF	INDF, __LCD8_ENABLE
$0174	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$0175	$0084			MOVWF	FSR
$0176	$3030			MOVLW	48
$0177	$0080			MOVWF	INDF
$0178	$2023			CALL	delays_delay_5500us
$0179	$2023			CALL	delays_delay_5500us
$017A	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$017B	$0084			MOVWF	FSR
$017C	$1480			BSF	INDF, __LCD8_ENABLE
$017D	$2021			CALL	delays_delay_1us
$017E	$1080			BCF	INDF, __LCD8_ENABLE
$017F	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$0180	$0084			MOVWF	FSR
$0181	$3030			MOVLW	48
$0182	$0080			MOVWF	INDF
$0183	$2023			CALL	delays_delay_5500us
$0184	$2023			CALL	delays_delay_5500us
$0185	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$0186	$0084			MOVWF	FSR
$0187	$1480			BSF	INDF, __LCD8_ENABLE
$0188	$2021			CALL	delays_delay_1us
$0189	$1080			BCF	INDF, __LCD8_ENABLE
$018A	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$018B	$0084			MOVWF	FSR
$018C	$3038			MOVLW	56
$018D	$0080			MOVWF	INDF
$018E	$2023			CALL	delays_delay_5500us
$018F	$2023			CALL	delays_delay_5500us
$0190	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$0191	$0084			MOVWF	FSR
$0192	$1480			BSF	INDF, __LCD8_ENABLE
$0193	$2021			CALL	delays_delay_1us
$0194	$1080			BCF	INDF, __LCD8_ENABLE
$0195	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$0196	$0084			MOVWF	FSR
$0197	$3010			MOVLW	16
$0198	$0080			MOVWF	INDF
$0199	$2023			CALL	delays_delay_5500us
$019A	$2023			CALL	delays_delay_5500us
$019B	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$019C	$0084			MOVWF	FSR
$019D	$1480			BSF	INDF, __LCD8_ENABLE
$019E	$2021			CALL	delays_delay_1us
$019F	$1080			BCF	INDF, __LCD8_ENABLE
$01A0	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$01A1	$0084			MOVWF	FSR
$01A2	$3001			MOVLW	1
$01A3	$0080			MOVWF	INDF
$01A4	$2023			CALL	delays_delay_5500us
$01A5	$2023			CALL	delays_delay_5500us
$01A6	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$01A7	$0084			MOVWF	FSR
$01A8	$1480			BSF	INDF, __LCD8_ENABLE
$01A9	$2021			CALL	delays_delay_1us
$01AA	$1080			BCF	INDF, __LCD8_ENABLE
$01AB	$0820			MOVF	lcd8bit_main_global_dataaddress, 0
$01AC	$0084			MOVWF	FSR
$01AD	$300F			MOVLW	15
$01AE	$0080			MOVWF	INDF
$01AF	$2023			CALL	delays_delay_5500us
$01B0	$2023			CALL	delays_delay_5500us
$01B1	$0821			MOVF	lcd8bit_main_global_ctrladdress, 0
$01B2	$0084			MOVWF	FSR
$01B3	$1480			BSF	INDF, __LCD8_ENABLE
$01B4	$2021			CALL	delays_delay_1us
$01B5	$1080			BCF	INDF, __LCD8_ENABLE
$01B6	$3001			MOVLW	1
$01B7	$00A2			MOVWF	lcd8bit_main_global_com
$01B8	$	lcd8bit_L_22:
$01B8	$0008			RETURN
$01B9	$	MemoriaI2C_recupera_dados:
^MemoriaI2C.pbas, 99 :: 		sub procedure Recupera_Dados
^MemoriaI2C.pbas, 101 :: 		for contador = 0 to 15
$01B9	$1303			BCF	STATUS, RP1
$01BA	$1283			BCF	STATUS, RP0
$01BB	$01A3			CLRF	main_global_contador, 1
$01BC	$3010			MOVLW	16
$01BD	$00C8			MOVWF	FLOC_Recupera_Dados+0
$01BE	$	MemoriaI2C_L_3:
$01BE	$0848			MOVF	FLOC_Recupera_Dados+0, 0
$01BF	$3C00			SUBLW	0
$01C0	$1803			BTFSC	STATUS, C
$01C1	$29D1			GOTO	MemoriaI2C_L_6
$01C2	$	MemoriaI2C_L_5:
^MemoriaI2C.pbas, 102 :: 		recepcao=le_i2c(contador)
$01C2	$0823			MOVF	main_global_contador, 0
$01C3	$00CC			MOVWF	FARG_Le_I2C
$01C4	$20F3			CALL	MemoriaI2C_le_i2c
$01C5	$0870			MOVF	STACK_0, 0
$01C6	$00A4			MOVWF	main_global_recepcao
^MemoriaI2C.pbas, 103 :: 		Lcd8_Chr(1,contador+1,recepcao)
$01C7	$3001			MOVLW	1
$01C8	$00CC			MOVWF	FARG_Lcd8_Chr
$01C9	$0A23			INCF	main_global_contador, 0
$01CA	$00CD			MOVWF	FARG_Lcd8_Chr+1
$01CB	$0870			MOVF	STACK_0, 0
$01CC	$00CE			MOVWF	FARG_Lcd8_Chr+2
$01CD	$210A			CALL	lcd8bit_lcd8_chr
^MemoriaI2C.pbas, 104 :: 		next contador
$01CE	$	MemoriaI2C_L_4:
$01CE	$0AA3			INCF	main_global_contador, 1
$01CF	$03C8			DECF	FLOC_Recupera_Dados+0, 1
$01D0	$29BE			GOTO	MemoriaI2C_L_3
$01D1	$	MemoriaI2C_L_6:
^MemoriaI2C.pbas, 106 :: 		for contador =16 to 31
$01D1	$3010			MOVLW	16
$01D2	$00A3			MOVWF	main_global_contador
$01D3	$3010			MOVLW	16
$01D4	$00C8			MOVWF	FLOC_Recupera_Dados+0
$01D5	$	MemoriaI2C_L_7:
$01D5	$0848			MOVF	FLOC_Recupera_Dados+0, 0
$01D6	$3C00			SUBLW	0
$01D7	$1803			BTFSC	STATUS, C
$01D8	$29E9			GOTO	MemoriaI2C_L_10
$01D9	$	MemoriaI2C_L_9:
^MemoriaI2C.pbas, 107 :: 		recepcao=le_i2c(contador)
$01D9	$0823			MOVF	main_global_contador, 0
$01DA	$00CC			MOVWF	FARG_Le_I2C
$01DB	$20F3			CALL	MemoriaI2C_le_i2c
$01DC	$0870			MOVF	STACK_0, 0
$01DD	$00A4			MOVWF	main_global_recepcao
^MemoriaI2C.pbas, 108 :: 		Lcd8_Chr(2,contador-15,recepcao)
$01DE	$3002			MOVLW	2
$01DF	$00CC			MOVWF	FARG_Lcd8_Chr
$01E0	$300F			MOVLW	15
$01E1	$0223			SUBWF	main_global_contador, 0
$01E2	$00CD			MOVWF	FARG_Lcd8_Chr+1
$01E3	$0870			MOVF	STACK_0, 0
$01E4	$00CE			MOVWF	FARG_Lcd8_Chr+2
$01E5	$210A			CALL	lcd8bit_lcd8_chr
^MemoriaI2C.pbas, 109 :: 		next contador
$01E6	$	MemoriaI2C_L_8:
$01E6	$0AA3			INCF	main_global_contador, 1
$01E7	$03C8			DECF	FLOC_Recupera_Dados+0, 1
$01E8	$29D5			GOTO	MemoriaI2C_L_7
$01E9	$	MemoriaI2C_L_10:
$01E9	$	MemoriaI2C_L_2:
$01E9	$0008			RETURN
$01EA	$	usartlib_u_a_usart_data_ready:
$01EA	$3000			MOVLW	0
$01EB	$1303			BCF	STATUS, RP1
$01EC	$1283			BCF	STATUS, RP0
$01ED	$1A8C			BTFSC	PIR1, 5
$01EE	$3001			MOVLW	1
$01EF	$00F1			MOVWF	STACK_1
$01F0	$0871			MOVF	STACK_1, 0
$01F1	$00C8			MOVWF	usartlib_u_a_usart_data_ready_local_result
$01F2	$	usartlib_u_a_L_18:
$01F2	$0848			MOVF	usartlib_u_a_usart_data_ready_local_result, 0
$01F3	$00F0			MOVWF	STACK_0
$01F4	$0008			RETURN
$01F5	$	usartlib_u_a_usart_read:
$01F5	$1303			BCF	STATUS, RP1
$01F6	$1283			BCF	STATUS, RP0
$01F7	$081A			MOVF	RCREG, 0
$01F8	$00C8			MOVWF	usartlib_u_a_usart_read_local_result
$01F9	$3000			MOVLW	0
$01FA	$1898			BTFSC	RCSTA, 1
$01FB	$3001			MOVLW	1
$01FC	$00F1			MOVWF	STACK_1
$01FD	$0871			MOVF	STACK_1, 0
$01FE	$3A01			XORLW	1
$01FF	$1D03			BTFSS	STATUS, Z
$0200	$2A03			GOTO	usartlib_u_a_L_21
$0201	$	usartlib_u_a_L_20:
$0201	$1218			BCF	RCSTA, 4
$0202	$	usartlib_u_a_L_24:
$0202	$	usartlib_u_a_L_25:
$0202	$1618			BSF	RCSTA, 4
$0203	$	usartlib_u_a_L_26:
$0203	$	usartlib_u_a_L_21:
$0203	$	usartlib_u_a_L_22:
$0203	$	usartlib_u_a_L_19:
$0203	$0848			MOVF	usartlib_u_a_usart_read_local_result, 0
$0204	$00F0			MOVWF	STACK_0
$0205	$0008			RETURN
$0206	$	usartlib_u_a_usart_write:
$0206	$	usartlib_u_a_L_14:
$0206	$3000			MOVLW	0
$0207	$1303			BCF	STATUS, RP1
$0208	$1683			BSF	STATUS, RP0
$0209	$1898			BTFSC	TXSTA, 1
$020A	$3001			MOVLW	1
$020B	$00F1			MOVWF	STACK_1
$020C	$0871			MOVF	STACK_1, 0
$020D	$3A00			XORLW	0
$020E	$1D03			BTFSS	STATUS, Z
$020F	$2A12			GOTO	usartlib_u_a_L_15
$0210	$0000			NOP
$0211	$2A06			GOTO	usartlib_u_a_L_14
$0212	$	usartlib_u_a_L_15:
$0212	$1283			BCF	STATUS, RP0
$0213	$0848			MOVF	FARG_USART_Write, 0
$0214	$0099			MOVWF	TXREG
$0215	$	usartlib_u_a_L_12:
$0215	$0008			RETURN
$0216	$	MemoriaI2C_salva_dados:
^MemoriaI2C.pbas, 117 :: 		sub procedure Salva_Dados
^MemoriaI2C.pbas, 119 :: 		for contador=0 to 31
$0216	$1303			BCF	STATUS, RP1
$0217	$1283			BCF	STATUS, RP0
$0218	$01A3			CLRF	main_global_contador, 1
$0219	$3020			MOVLW	32
$021A	$00C8			MOVWF	FLOC_Salva_Dados+0
$021B	$	MemoriaI2C_L_12:
$021B	$0848			MOVF	FLOC_Salva_Dados+0, 0
$021C	$3C00			SUBLW	0
$021D	$1803			BTFSC	STATUS, C
$021E	$2A2E			GOTO	MemoriaI2C_L_15
$021F	$	MemoriaI2C_L_14:
^MemoriaI2C.pbas, 120 :: 		escrever_i2c(contador,buffer[contador])
$021F	$0823			MOVF	main_global_contador, 0
$0220	$00CC			MOVWF	FARG_Escrever_I2C
$0221	$3025			MOVLW	main_global_buffer
$0222	$00F0			MOVWF	STACK_0
$0223	$0823			MOVF	main_global_contador, 0
$0224	$07F0			ADDWF	STACK_0, 1
$0225	$0870			MOVF	STACK_0, 0
$0226	$0084			MOVWF	FSR
$0227	$0800			MOVF	INDF, 0
$0228	$00CD			MOVWF	FARG_Escrever_I2C+1
$0229	$213A			CALL	MemoriaI2C_escrever_i2c
^MemoriaI2C.pbas, 121 :: 		next contador
$022A	$	MemoriaI2C_L_13:
$022A	$1283			BCF	STATUS, RP0
$022B	$0AA3			INCF	main_global_contador, 1
$022C	$03C8			DECF	FLOC_Salva_Dados+0, 1
$022D	$2A1B			GOTO	MemoriaI2C_L_12
$022E	$	MemoriaI2C_L_15:
$022E	$	MemoriaI2C_L_11:
$022E	$0008			RETURN
$022F	$	i2clib_i_a_i2c_init:
$022F	$1303			BCF	STATUS, RP1
$0230	$1683			BSF	STATUS, RP0
$0231	$1314			BCF	SSPSTAT, 6
$0232	$1394			BCF	SSPSTAT, 7
$0233	$3038			MOVLW	56
$0234	$1283			BCF	STATUS, RP0
$0235	$0094			MOVWF	SSPCON
$0236	$3038			MOVLW	56
$0237	$1683			BSF	STATUS, RP0
$0238	$0487			IORWF	TRISC, 1
$0239	$	i2clib_i_a_L_0:
$0239	$0008			RETURN
$023A	$	usartlib_u_a_usart_init:
$023A	$	usartlib_u_a_L_1:
$023A	$1303			BCF	STATUS, RP1
$023B	$1683			BSF	STATUS, RP0
$023C	$1698			BSF	TXSTA, 5
$023D	$	usartlib_u_a_L_2:
$023D	$3090			MOVLW	144
$023E	$1283			BCF	STATUS, RP0
$023F	$0098			MOVWF	RCSTA
$0240	$	usartlib_u_a_L_3:
$0240	$1683			BSF	STATUS, RP0
$0241	$1787			BSF	TRISC, 7
$0242	$	usartlib_u_a_L_4:
$0242	$1307			BCF	TRISC, 6
$0243	$	usartlib_u_a_L_6:
$0243	$	usartlib_u_a_L_8:
$0243	$3000			MOVLW	0
$0244	$1283			BCF	STATUS, RP0
$0245	$1A8C			BTFSC	PIR1, 5
$0246	$3001			MOVLW	1
$0247	$00F1			MOVWF	STACK_1
$0248	$0871			MOVF	STACK_1, 0
$0249	$3A01			XORLW	1
$024A	$1D03			BTFSS	STATUS, Z
$024B	$2A4D			GOTO	usartlib_u_a_L_9
$024C	$2A43			GOTO	usartlib_u_a_L_8
$024D	$	usartlib_u_a_L_9:
$024D	$	usartlib_u_a_L_0:
$024D	$0008			RETURN
$024E	$	MemoriaI2C_main:
^MemoriaI2C.pbas, 130 :: 		Main:
$024E	$	MemoriaI2C_main_main:
^MemoriaI2C.pbas, 132 :: 		trisa=%11111111              'põe todos os pinos para entrada
$024E	$30FF			MOVLW	255
$024F	$1303			BCF	STATUS, RP1
$0250	$1683			BSF	STATUS, RP0
$0251	$0085			MOVWF	TRISA
^MemoriaI2C.pbas, 133 :: 		trise=0
$0252	$0189			CLRF	TRISE, 1
^MemoriaI2C.pbas, 134 :: 		trisd=0
$0253	$0188			CLRF	TRISD, 1
^MemoriaI2C.pbas, 135 :: 		adcon1=7                        'configura pinos de i/o
$0254	$3007			MOVLW	7
$0255	$009F			MOVWF	ADCON1
^MemoriaI2C.pbas, 136 :: 		I2C_init(100000)             'inicializa o módulo para funcionar a 100kHz em modo master
$0256	$300A			MOVLW	10
$0257	$0093			MOVWF	SSPADD
$0258	$222F			CALL	i2clib_i_a_i2c_init
^MemoriaI2C.pbas, 137 :: 		option_reg=%10000000         'configura prescaler do timer 0
$0259	$3080			MOVLW	128
$025A	$0081			MOVWF	OPTION_REG
^MemoriaI2C.pbas, 140 :: 		LCD8_Config(PORTE, PORTD, 2, 1, 0, 7, 6, 5, 4, 3, 2, 1, 0)  'configura pinos de controle e dados
$025B	$3009			MOVLW	PORTE
$025C	$1283			BCF	STATUS, RP0
$025D	$00C8			MOVWF	farg_Lcd8_Init
$025E	$3008			MOVLW	PORTD
$025F	$00C9			MOVWF	farg_Lcd8_Init+1
$0260	$2156			CALL	lcd8bit_lcd8_init
^MemoriaI2C.pbas, 141 :: 		LCD8_Init(PORTE,PORTD)                                      'inicializa o lcd
$0261	$3009			MOVLW	PORTE
$0262	$00C8			MOVWF	FARG_Lcd8_Init
$0263	$3008			MOVLW	PORTD
$0264	$00C9			MOVWF	FARG_Lcd8_Init+1
$0265	$2156			CALL	lcd8bit_lcd8_init
^MemoriaI2C.pbas, 143 :: 		Usart_Init(9600)             'Inicializa o módulo Usart para trabalhar a 9600bps
$0266	$3019			MOVLW	25
$0267	$1683			BSF	STATUS, RP0
$0268	$0099			MOVWF	SPBRG
$0269	$1518			BSF	TXSTA, BRGH
$026A	$223A			CALL	usartlib_u_a_usart_init
^MemoriaI2C.pbas, 145 :: 		Recupera_Dados               'Chama rotina para ler e mostrar os
$026B	$21B9			CALL	MemoriaI2C_recupera_dados
^MemoriaI2C.pbas, 147 :: 		linha=1
$026C	$3001			MOVLW	1
$026D	$00C5			MOVWF	main_global_linha
^MemoriaI2C.pbas, 148 :: 		coluna=1
$026E	$3001			MOVLW	1
$026F	$00C6			MOVWF	main_global_coluna
^MemoriaI2C.pbas, 149 :: 		controle=0
$0270	$01C7			CLRF	main_global_controle, 1
^MemoriaI2C.pbas, 155 :: 		while 1 =1
$0271	$	MemoriaI2C_L_18:
^MemoriaI2C.pbas, 157 :: 		if usart_data_ready<>0 then
$0271	$21EA			CALL	usartlib_u_a_usart_data_ready
$0272	$0870			MOVF	STACK_0, 0
$0273	$3A00			XORLW	0
$0274	$1903			BTFSC	STATUS, Z
$0275	$2AA1			GOTO	MemoriaI2C_L_23
$0276	$	MemoriaI2C_L_22:
^MemoriaI2C.pbas, 158 :: 		recepcao=Usart_Read
$0276	$21F5			CALL	usartlib_u_a_usart_read
$0277	$0870			MOVF	STACK_0, 0
$0278	$00A4			MOVWF	main_global_recepcao
^MemoriaI2C.pbas, 159 :: 		Usart_Write(recepcao)
$0279	$0870			MOVF	STACK_0, 0
$027A	$00C8			MOVWF	FARG_USART_Write
$027B	$2206			CALL	usartlib_u_a_usart_write
^MemoriaI2C.pbas, 160 :: 		buffer[controle]=recepcao
$027C	$3025			MOVLW	main_global_buffer
$027D	$00F0			MOVWF	STACK_0
$027E	$0847			MOVF	main_global_controle, 0
$027F	$07F0			ADDWF	STACK_0, 1
$0280	$0870			MOVF	STACK_0, 0
$0281	$0084			MOVWF	FSR
$0282	$0824			MOVF	main_global_recepcao, 0
$0283	$0080			MOVWF	INDF
^MemoriaI2C.pbas, 161 :: 		controle=controle+1        'salva dado no buffer
$0284	$0AC7			INCF	main_global_controle, 1
^MemoriaI2C.pbas, 162 :: 		Lcd8_Chr(linha,coluna,recepcao)
$0285	$0845			MOVF	main_global_linha, 0
$0286	$00CC			MOVWF	FARG_Lcd8_Chr
$0287	$0846			MOVF	main_global_coluna, 0
$0288	$00CD			MOVWF	FARG_Lcd8_Chr+1
$0289	$0824			MOVF	main_global_recepcao, 0
$028A	$00CE			MOVWF	FARG_Lcd8_Chr+2
$028B	$210A			CALL	lcd8bit_lcd8_chr
^MemoriaI2C.pbas, 163 :: 		coluna=coluna+1
$028C	$0A46			INCF	main_global_coluna, 0
$028D	$00F1			MOVWF	STACK_1
$028E	$0871			MOVF	STACK_1, 0
$028F	$00C6			MOVWF	main_global_coluna
^MemoriaI2C.pbas, 165 :: 		if coluna=17 then
$0290	$0871			MOVF	STACK_1, 0
$0291	$3A11			XORLW	17
$0292	$1D03			BTFSS	STATUS, Z
$0293	$2AA1			GOTO	MemoriaI2C_L_26
$0294	$	MemoriaI2C_L_25:
^MemoriaI2C.pbas, 166 :: 		coluna=1
$0294	$3001			MOVLW	1
$0295	$00C6			MOVWF	main_global_coluna
^MemoriaI2C.pbas, 168 :: 		if linha=1 then
$0296	$0845			MOVF	main_global_linha, 0
$0297	$3A01			XORLW	1
$0298	$1D03			BTFSS	STATUS, Z
$0299	$2A9D			GOTO	MemoriaI2C_L_29
$029A	$	MemoriaI2C_L_28:
^MemoriaI2C.pbas, 169 :: 		linha=2
$029A	$3002			MOVLW	2
$029B	$00C5			MOVWF	main_global_linha
$029C	$2AA1			GOTO	MemoriaI2C_L_30
^MemoriaI2C.pbas, 170 :: 		else
$029D	$	MemoriaI2C_L_29:
^MemoriaI2C.pbas, 171 :: 		linha=1
$029D	$3001			MOVLW	1
$029E	$00C5			MOVWF	main_global_linha
^MemoriaI2C.pbas, 172 :: 		Salva_Dados            'Chama rotina para salvar dados na I2C
$029F	$2216			CALL	MemoriaI2C_salva_dados
^MemoriaI2C.pbas, 173 :: 		controle=0
$02A0	$01C7			CLRF	main_global_controle, 1
^MemoriaI2C.pbas, 174 :: 		end if
$02A1	$	MemoriaI2C_L_30:
$02A1	$	MemoriaI2C_L_26:
^MemoriaI2C.pbas, 176 :: 		end if
$02A1	$	MemoriaI2C_L_27:
$02A1	$	MemoriaI2C_L_23:
^MemoriaI2C.pbas, 178 :: 		end if
$02A1	$	MemoriaI2C_L_24:
$02A1	$2A71			GOTO	MemoriaI2C_L_18
^MemoriaI2C.pbas, 180 :: 		wend
$02A2	$2AA2			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		I2C_Is_Idle
$0021		Delay_1us
$0023		Delay_5500us
$0034		Delay_500us
$003D		I2C_start
$0076		I2C_Wr
$0098		I2C_Repeated_Start
$00A6		I2C_Rd
$00C6		I2C_Stop
$00CA		Lcd8_Cmd
$00F3		Le_I2C
$010A		Lcd8_Chr
$013A		Escrever_I2C
$0156		Lcd8_Init
$01B9		Recupera_Dados
$01EA		USART_Data_Ready
$01F5		USART_Read
$0206		USART_Write
$0216		Salva_Dados
$022F		I2C_Init
$023A		USART_init
$024E		main


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		i2clib_i_a_i2c_is_idle:
$0010		i2clib_i_a_L_2:
$0017		i2clib_i_a_L_5:
$001A		i2clib_i_a_L_6:
$001A		i2clib_i_a_L_7:
$001C		i2clib_i_a_L_1:
$001C		i2clib_i_a_L_3:
$001C		i2clib_i_a_L_4:
$0021		delays_delay_1us:
$0022		delays_L_0:
$0023		delays_delay_5500us:
$0033		delays_L_6:
$0034		delays_delay_500us:
$003C		delays_L_5:
$003D		i2clib_i_a_i2c_start:
$0045		i2clib_i_a_L_9:
$004B		L_I2C_start_0:
$004D		i2clib_i_a_L_11:
$0052		i2clib_i_a_L_13:
$0053		i2clib_i_a_L_10:
$0053		i2clib_i_a_L_14:
$0053		i2clib_i_a_L_15:
$005B		i2clib_i_a_L_12:
$0061		L_I2C_start_1:
$0063		i2clib_i_a_L_16:
$0066		i2clib_i_a_L_17:
$0068		i2clib_i_a_L_20:
$0071		i2clib_i_a_L_21:
$0073		i2clib_i_a_L_18:
$0073		i2clib_i_a_L_8:
$0076		i2clib_i_a_i2c_wr:
$007A		i2clib_i_a_L_32:
$0085		i2clib_i_a_L_33:
$008D		i2clib_i_a_L_36:
$0090		i2clib_i_a_L_37:
$0095		i2clib_i_a_L_30:
$0095		i2clib_i_a_L_38:
$0098		i2clib_i_a_i2c_repeated_start:
$009B		i2clib_i_a_L_26:
$00A5		i2clib_i_a_L_24:
$00A5		i2clib_i_a_L_27:
$00A6		i2clib_i_a_i2c_rd:
$00A9		i2clib_i_a_L_42:
$00B3		i2clib_i_a_L_43:
$00BD		i2clib_i_a_L_46:
$00BF		i2clib_i_a_L_47:
$00BF		i2clib_i_a_L_48:
$00C2		i2clib_i_a_L_40:
$00C6		i2clib_i_a_i2c_stop:
$00C9		i2clib_i_a_L_39:
$00CA		lcd8bit_lcd8_cmd:
$00E5		lcd8bit_L_1:
$00E7		lcd8bit_L_2:
$00E8		lcd8bit_L_3:
$00EF		lcd8bit_L_4:
$00F1		lcd8bit_L_5:
$00F2		lcd8bit_L_0:
$00F2		lcd8bit_L_6:
$00F3		MemoriaI2C_le_i2c:
$0107		MemoriaI2C_L_0:
$010A		lcd8bit_L_10:
$010A		lcd8bit_lcd8_chr:
$0110		lcd8bit_L_9:
$0113		lcd8bit_L_11:
$0113		lcd8bit_L_13:
$0117		lcd8bit_L_12:
$011A		lcd8bit_L_14:
$011A		lcd8bit_L_16:
$011E		lcd8bit_L_15:
$0121		lcd8bit_L_17:
$0121		lcd8bit_L_19:
$0125		lcd8bit_L_18:
$0128		lcd8bit_L_20:
$012A		lcd8bit_L_8:
$0139		lcd8bit_L_7:
$013A		MemoriaI2C_escrever_i2c:
$0155		MemoriaI2C_L_1:
$0156		lcd8bit_lcd8_init:
$01B8		lcd8bit_L_22:
$01B9		MemoriaI2C_recupera_dados:
$01BE		MemoriaI2C_L_3:
$01C2		MemoriaI2C_L_5:
$01CE		MemoriaI2C_L_4:
$01D1		MemoriaI2C_L_6:
$01D5		MemoriaI2C_L_7:
$01D9		MemoriaI2C_L_9:
$01E6		MemoriaI2C_L_8:
$01E9		MemoriaI2C_L_10:
$01E9		MemoriaI2C_L_2:
$01EA		usartlib_u_a_usart_data_ready:
$01F2		usartlib_u_a_L_18:
$01F5		usartlib_u_a_usart_read:
$0201		usartlib_u_a_L_20:
$0202		usartlib_u_a_L_24:
$0202		usartlib_u_a_L_25:
$0203		usartlib_u_a_L_19:
$0203		usartlib_u_a_L_21:
$0203		usartlib_u_a_L_22:
$0203		usartlib_u_a_L_26:
$0206		usartlib_u_a_L_14:
$0206		usartlib_u_a_usart_write:
$0212		usartlib_u_a_L_15:
$0215		usartlib_u_a_L_12:
$0216		MemoriaI2C_salva_dados:
$021B		MemoriaI2C_L_12:
$021F		MemoriaI2C_L_14:
$022A		MemoriaI2C_L_13:
$022E		MemoriaI2C_L_11:
$022E		MemoriaI2C_L_15:
$022F		i2clib_i_a_i2c_init:
$0239		i2clib_i_a_L_0:
$023A		usartlib_u_a_L_1:
$023A		usartlib_u_a_usart_init:
$023D		usartlib_u_a_L_2:
$0240		usartlib_u_a_L_3:
$0242		usartlib_u_a_L_4:
$0243		usartlib_u_a_L_6:
$0243		usartlib_u_a_L_8:
$024D		usartlib_u_a_L_0:
$024D		usartlib_u_a_L_9:
$024E		MemoriaI2C_main:
$024E		MemoriaI2C_main_main:
$0271		MemoriaI2C_L_18:
$0276		MemoriaI2C_L_22:
$0294		MemoriaI2C_L_25:
$029A		MemoriaI2C_L_28:
$029D		MemoriaI2C_L_29:
$02A1		MemoriaI2C_L_23:
$02A1		MemoriaI2C_L_24:
$02A1		MemoriaI2C_L_26:
$02A1		MemoriaI2C_L_27:
$02A1		MemoriaI2C_L_30:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0008		PORTD
$0009		PORTE
$000A		PCLATH
$000C		PIR1
$0013		SSPBUF
$0014		SSPCON
$0018		RCSTA
$0019		TXREG
$001A		RCREG
$0020		lcd8bit_main_global_dataaddress
$0021		lcd8bit_main_global_ctrladdress
$0022		lcd8bit_main_global_com
$0023		main_global_contador
$0024		main_global_recepcao
$0025		main_global_buffer
$0045		main_global_linha
$0046		main_global_coluna
$0047		main_global_controle
$0048		?T1_MemoriaI2C_recupera_dados
$0048		?T2_MemoriaI2C_salva_dados
$0048		FARG_Lcd8_Init
$0048		FARG_USART_Write
$0048		i2clib_i_a_i2c_init_param_clock
$0048		usartlib_u_a_usart_data_ready_local_result
$0048		usartlib_u_a_usart_init_param_baude_rate
$0048		usartlib_u_a_usart_read_local_result
$0049		FARG_Lcd8_Init+1
$004C		FARG_Escrever_I2C
$004C		FARG_Lcd8_Chr
$004C		FARG_Le_I2C
$004D		FARG_Escrever_I2C+1
$004D		FARG_Lcd8_Chr+1
$004D		memoriai2c_le_i2c_local_result
$004E		FARG_Lcd8_Chr+2
$004E		memoriai2c_le_i2c_local_aux
$004F		FARG_I2C_Rd
$004F		FARG_I2C_Wr
$004F		FARG_Lcd8_Cmd
$004F		i2clib_i_a_i2c_start_local_result
$0050		i2clib_i_a_i2c_rd_local_result
$0050		i2clib_i_a_i2c_start_local_j
$0050		i2clib_i_a_i2c_wr_local_result
$0052		?T0_i2clib_i_a_i2c_start
$0054		i2clib_i_a_i2c_is_idle_local_result
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0081		OPTION_REG
$0085		TRISA
$0087		TRISC
$0088		TRISD
$0089		TRISE
$0091		SSPCON2
$0093		SSPADD
$0094		SSPSTAT
$0098		TXSTA
$0099		SPBRG
$009F		ADCON1


