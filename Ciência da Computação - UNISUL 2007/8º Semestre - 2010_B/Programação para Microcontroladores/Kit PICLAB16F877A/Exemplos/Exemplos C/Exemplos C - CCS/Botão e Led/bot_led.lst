CCS PCM C Compiler, Version 3.245, 28193               27-mar-07 09:05

               Filename: C:\Cerne\CDs\kit PICLAB16f877A\Exemplos\Exemplos C\Botão e Led\bot_led.lst

               ROM used: 49 words (1%)
                         Largest free fragment is 2048
               RAM used: 5 (3%) at main() level
                         5 (3%) worst case
               Stack:    0 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                 Programação em C - Módulo B PIC16F877A                  * 
....................  *                                Exemplo 1                                * 
....................  *                                                                         * 
....................  *                            CERNE TECNOLOGIA                             * 
....................  * 		                   www.cerne-tec.com.br                           * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *   VERSÃO : 1.0                                                          * 
....................  *   DATA : 16/05/2005                                                     * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                             Descrição geral                           * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
.................... 	           // Observar o estado de um botão através de um led 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                     	    Definição de Cabeçalho     	                * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #include	<16F877A.h>					//microcontrolador utilizado 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                        Configurações para gravação                    * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
.................... #fuses xt,nolvp,wdt,nolvp,nobrownout,put,nodebug,noprotect,nowrt,nocpd 
....................                             								// Configurações da Máquina 
....................                                   						// Oscilador: XT 
....................                                   						// LVP: Off 
....................                                   						// WDT: On, Brown-out: Off 
....................                                    						// Power-up: Off, Debug: Off 
....................                                     					// CPD: Off 
....................  
.................... #use delay(clock=4000000)       	   	// Define o clock do sistema 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                                Entradas                               * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................             //Aqui iremos definir as entradas do sistema 
....................  
.................... #define BOTAO		PIN_A4		   	 // Define entrada para o botão 
....................  
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                                 Saídas                              * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................           //Aqui iremos definir as saídas do sistema 
....................  
.................... #define LED			PIN_D7		       //Define a saída para o led 
.................... #define COLUNA1	PIN_D0	          //Define a saída da coluna 
.................... #define CS_LED		PIN_B5	          //Define a saída da coluna 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                       Prototipagem das funções                  * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
.................... //Aqui iremos declarar todas as funções definidas pelo usuário 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                           Rotina Principal                	    * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
.................... //Nessa parte ficará o loop principal do sistema 
....................  
.................... void main(void) 
.................... { 
0004:  CLRF   04
0005:  MOVLW  1F
0006:  ANDWF  03,F
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
....................    output_high(pin_b7); 
000E:  BCF    06.7
000F:  BCF    03.5
0010:  BSF    06.7
....................    output_high(pin_b6);                 //Deixa as linhas de gravação em nível baixo 
0011:  BSF    03.5
0012:  BCF    06.6
0013:  BCF    03.5
0014:  BSF    06.6
....................  
.................... 	output_high(CS_LED);		   		//Seleciona o barramento para os leds 
0015:  BSF    03.5
0016:  BCF    06.5
0017:  BCF    03.5
0018:  BSF    06.5
.................... 	output_low(COLUNA1);		     		//Deixa a coluna1 ativa 
0019:  BSF    03.5
001A:  BCF    08.0
001B:  BCF    03.5
001C:  BCF    08.0
....................    output_d(0);                     //Coloca todo o PORTD como saída 
001D:  BSF    03.5
001E:  CLRF   08
001F:  BCF    03.5
0020:  CLRF   08
....................  
.................... 	while(1)				         		//Entra em loop infinito 
.................... 		{ 
.................... 			if (input(BOTAO))    		//Botão está pressionado? 
0021:  BSF    03.5
0022:  BSF    05.4
0023:  BCF    03.5
0024:  BTFSS  05.4
0025:  GOTO   02B
.................... 			 output_low(LED);	   		//Não, então apaga o led 
0026:  BSF    03.5
0027:  BCF    08.7
0028:  BCF    03.5
0029:  BCF    08.7
.................... 			else			   	       	//Sim... 
002A:  GOTO   02F
.................... 			 output_high(LED);	   	//Então acende o led 
002B:  BSF    03.5
002C:  BCF    08.7
002D:  BCF    03.5
002E:  BSF    08.7
.................... 		} 
002F:  GOTO   021
.................... } 
....................  
.................... /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
....................  *                         Fim do programa	       	                * 
....................  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
....................  
....................  
0030:  SLEEP

Configuration Fuses:
   Word  1: 3F35   XT WDT PUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
