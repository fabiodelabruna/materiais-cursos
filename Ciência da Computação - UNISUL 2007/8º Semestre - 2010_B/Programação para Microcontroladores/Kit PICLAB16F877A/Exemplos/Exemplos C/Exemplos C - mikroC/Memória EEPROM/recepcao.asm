;  ASM code generated by mikroVirtualMachine for PIC - V. 6.2.1.0
;  Date/Time: 29/7/2007 14:57:37
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$282C			GOTO	_main
$0004	$	_EEprom_read:
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$0821			MOVF	FARG_EEprom_read+0, 0
$0007	$1703			BSF	STATUS, RP1
$0008	$008D			MOVWF	EEADR
$0009	$1683			BSF	STATUS, RP0
$000A	$138C			BCF	EECON1, 7
$000B	$140C			BSF	EECON1, 0
$000C	$1283			BCF	STATUS, RP0
$000D	$080C			MOVF	EEDATA, 0
$000E	$00F0			MOVWF	STACK_0
$000F	$0008			RETURN
$0010	$	_EEprom_write:
$0010	$0000			NOP
$0011	$	L_EEprom_write_0:
$0011	$1703			BSF	STATUS, RP1
$0012	$1683			BSF	STATUS, RP0
$0013	$1C8C			BTFSS	EECON1, 1
$0014	$2817			GOTO	L_EEprom_write_1
$0015	$0000			NOP
$0016	$2811			GOTO	L_EEprom_write_0
$0017	$	L_EEprom_write_1:
$0017	$1303			BCF	STATUS, RP1
$0018	$1283			BCF	STATUS, RP0
$0019	$0821			MOVF	FARG_EEprom_write+0, 0
$001A	$1703			BSF	STATUS, RP1
$001B	$008D			MOVWF	EEADR
$001C	$1303			BCF	STATUS, RP1
$001D	$0822			MOVF	FARG_EEprom_write+1, 0
$001E	$1703			BSF	STATUS, RP1
$001F	$008C			MOVWF	EEDATA
$0020	$1683			BSF	STATUS, RP0
$0021	$138C			BCF	EECON1, 7
$0022	$150C			BSF	EECON1, 2
$0023	$138B			BCF	INTCON, 7
$0024	$3055			MOVLW	85
$0025	$008D			MOVWF	EECON2
$0026	$30AA			MOVLW	170
$0027	$008D			MOVWF	EECON2
$0028	$148C			BSF	EECON1, 1
$0029	$178B			BSF	INTCON, 7
$002A	$110C			BCF	EECON1, 2
$002B	$0008			RETURN
$002C	$	_main:
;recepcao.c,33 :: 		void main(void)
;recepcao.c,35 :: 		portb=0;
$002C	$1303			BCF	STATUS, RP1
$002D	$1283			BCF	STATUS, RP0
$002E	$0186			CLRF	PORTB, 1
;recepcao.c,36 :: 		trisb=0b00000000;            //inicializa o barramento
$002F	$1683			BSF	STATUS, RP0
$0030	$0186			CLRF	TRISB, 1
;recepcao.c,37 :: 		trisd=0b00000000;            //configura i/o do sistema
$0031	$0188			CLRF	TRISD, 1
;recepcao.c,38 :: 		adcon1=7;                    //desliga a/d
$0032	$3007			MOVLW	7
$0033	$009F			MOVWF	ADCON1
;recepcao.c,39 :: 		option_reg=0b10000000;       //configura prescaler do timer 0
$0034	$3080			MOVLW	128
$0035	$0081			MOVWF	OPTION_REG
;recepcao.c,40 :: 		dado=eeprom_read(0);         //lê a posição zero de memória e carrega no barramento
$0036	$1283			BCF	STATUS, RP0
$0037	$01A1			CLRF	FARG_EEprom_read+0, 1
$0038	$2004			CALL	_EEprom_read
$0039	$0870			MOVF	STACK_0, 0
$003A	$1303			BCF	STATUS, RP1
$003B	$00A0			MOVWF	_dado
;recepcao.c,42 :: 		while (1)
$003C	$	L_main_0:
;recepcao.c,45 :: 		portb.f5=1;                //liga a saída de leds
$003C	$1303			BCF	STATUS, RP1
$003D	$1283			BCF	STATUS, RP0
$003E	$1686			BSF	PORTB, 5
;recepcao.c,46 :: 		portd=dado;               //atualiza a saída de leds
$003F	$0820			MOVF	_dado, 0
$0040	$0088			MOVWF	PORTD
;recepcao.c,47 :: 		delay_ms(500);             //aguarda 1000ms
$0041	$3003			MOVLW	3
$0042	$00FC			MOVWF	STACK_12
$0043	$30FF			MOVLW	255
$0044	$00FB			MOVWF	STACK_11
$0045	$30FF			MOVLW	255
$0046	$00FA			MOVWF	STACK_10
$0047	$0BFC			DECFSZ	STACK_12, F
$0048	$284A			GOTO	$+2
$0049	$2851			GOTO	$+8
$004A	$0BFB			DECFSZ	STACK_11, F
$004B	$284D			GOTO	$+2
$004C	$2850			GOTO	$+4
$004D	$0BFA			DECFSZ	STACK_10, F
$004E	$284D			GOTO	$-1
$004F	$284A			GOTO	$-5
$0050	$2847			GOTO	$-9
$0051	$308C			MOVLW	140
$0052	$00FB			MOVWF	STACK_11
$0053	$30FF			MOVLW	255
$0054	$00FA			MOVWF	STACK_10
$0055	$0BFB			DECFSZ	STACK_11, F
$0056	$2858			GOTO	$+2
$0057	$285B			GOTO	$+4
$0058	$0BFA			DECFSZ	STACK_10, F
$0059	$2858			GOTO	$-1
$005A	$2855			GOTO	$-5
$005B	$30A1			MOVLW	161
$005C	$00FA			MOVWF	STACK_10
$005D	$0BFA			DECFSZ	STACK_10, F
$005E	$285D			GOTO	$-1
$005F	$0000			NOP
;recepcao.c,49 :: 		portb.f5=0;                //desliga saída de leds
$0060	$1286			BCF	PORTB, 5
;recepcao.c,50 :: 		portd=0b11111110;          //seleciona linha 1 do teclado matricial
$0061	$30FE			MOVLW	254
$0062	$0088			MOVWF	PORTD
;recepcao.c,51 :: 		delay_us(10);              //tempo de acomodação
$0063	$3003			MOVLW	3
$0064	$00FA			MOVWF	STACK_10
$0065	$0BFA			DECFSZ	STACK_10, F
$0066	$2865			GOTO	$-1
;recepcao.c,53 :: 		if (porta.f4==0)           //se o botão estiver pressioando...
$0067	$3000			MOVLW	0
$0068	$1A05			BTFSC	PORTA, 4
$0069	$3001			MOVLW	1
$006A	$00F1			MOVWF	STACK_1
$006B	$0871			MOVF	STACK_1, 0
$006C	$3A00			XORLW	0
$006D	$1D03			BTFSS	STATUS, Z
$006E	$2874			GOTO	L_main_2
;recepcao.c,55 :: 		dado++;                //incrementa o dado
$006F	$0AA0			INCF	_dado, 1
;recepcao.c,56 :: 		eeprom_write(0,dado);  //atualiza a eeprom
$0070	$01A1			CLRF	FARG_EEprom_write+0, 1
$0071	$0820			MOVF	_dado, 0
$0072	$00A2			MOVWF	FARG_EEprom_write+1
$0073	$2010			CALL	_EEprom_write
;recepcao.c,57 :: 		}
$0074	$	L_main_2:
;recepcao.c,59 :: 		if (porta.f5==0)          //se o botão estiver pressioando...
$0074	$3000			MOVLW	0
$0075	$1303			BCF	STATUS, RP1
$0076	$1283			BCF	STATUS, RP0
$0077	$1A85			BTFSC	PORTA, 5
$0078	$3001			MOVLW	1
$0079	$00F1			MOVWF	STACK_1
$007A	$0871			MOVF	STACK_1, 0
$007B	$3A00			XORLW	0
$007C	$1D03			BTFSS	STATUS, Z
$007D	$2883			GOTO	L_main_3
;recepcao.c,61 :: 		dado--;                //decrementa o dado
$007E	$03A0			DECF	_dado, 1
;recepcao.c,62 :: 		eeprom_write(0,dado);  //atualiza a eeprom
$007F	$01A1			CLRF	FARG_EEprom_write+0, 1
$0080	$0820			MOVF	_dado, 0
$0081	$00A2			MOVWF	FARG_EEprom_write+1
$0082	$2010			CALL	_EEprom_write
;recepcao.c,63 :: 		}
$0083	$	L_main_3:
;recepcao.c,64 :: 		}
$0083	$1703			BSF	STATUS, RP1
$0084	$1683			BSF	STATUS, RP0
$0085	$283C			GOTO	L_main_0
;recepcao.c,65 :: 		}
$0086	$2886			GOTO	$
