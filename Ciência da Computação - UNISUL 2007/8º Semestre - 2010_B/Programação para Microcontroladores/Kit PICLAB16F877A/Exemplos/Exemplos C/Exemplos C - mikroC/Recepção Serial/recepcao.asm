;  ASM code generated by mikroVirtualMachine for PIC - V. 6.2.1.0
;  Date/Time: 29/7/2007 14:51:45
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$28DF			GOTO	_main
$0004	$	_Delay_1us:
;delays.c,2 :: 		void Delay_1us() {
;delays.c,3 :: 		Delay_us(1);
$0004	$0000			NOP
;delays.c,4 :: 		}
$0005	$0008			RETURN
$0006	$	_Delay_5500us:
;delays.c,26 :: 		void Delay_5500us() {
;delays.c,27 :: 		Delay_us(5500);
$0006	$3008			MOVLW	8
$0007	$1303			BCF	STATUS, RP1
$0008	$1283			BCF	STATUS, RP0
$0009	$00FB			MOVWF	STACK_11
$000A	$30FF			MOVLW	255
$000B	$00FA			MOVWF	STACK_10
$000C	$0BFB			DECFSZ	STACK_11, F
$000D	$280F			GOTO	$+2
$000E	$2812			GOTO	$+4
$000F	$0BFA			DECFSZ	STACK_10, F
$0010	$280F			GOTO	$-1
$0011	$280C			GOTO	$-5
$0012	$301E			MOVLW	30
$0013	$00FA			MOVWF	STACK_10
$0014	$0BFA			DECFSZ	STACK_10, F
$0015	$2814			GOTO	$-1
;delays.c,28 :: 		}
$0016	$0008			RETURN
$0017	$	_Delay_50us:
;delays.c,14 :: 		void Delay_50us() {
;delays.c,15 :: 		Delay_us(50);
$0017	$3010			MOVLW	16
$0018	$1303			BCF	STATUS, RP1
$0019	$1283			BCF	STATUS, RP0
$001A	$00FA			MOVWF	STACK_10
$001B	$0BFA			DECFSZ	STACK_10, F
$001C	$281B			GOTO	$-1
$001D	$0000			NOP
;delays.c,16 :: 		}
$001E	$0008			RETURN
$001F	$	_Lcd8_Cmd:
$001F	$1303			BCF	STATUS, RP1
$0020	$1283			BCF	STATUS, RP0
$0021	$0820			MOVF	lcd8bit_DataAddress, 0
$0022	$0084			MOVWF	FSR
$0023	$0180			CLRF	INDF, 1
$0024	$082B			MOVF	FARG_Lcd8_Cmd+0, 0
$0025	$1903			BTFSC	STATUS, Z
$0026	$2827			GOTO	L_Lcd8_Cmd_0
$0027	$	L_Lcd8_Cmd_0:
$0027	$1BAB			BTFSC	FARG_Lcd8_Cmd+0, 7
$0028	$1780			BSF	INDF, __LCD8_DB7
$0029	$1B2B			BTFSC	FARG_Lcd8_Cmd+0, 6
$002A	$1700			BSF	INDF, __LCD8_DB6
$002B	$1AAB			BTFSC	FARG_Lcd8_Cmd+0, 5
$002C	$1680			BSF	INDF, __LCD8_DB5
$002D	$1A2B			BTFSC	FARG_Lcd8_Cmd+0, 4
$002E	$1600			BSF	INDF, __LCD8_DB4
$002F	$19AB			BTFSC	FARG_Lcd8_Cmd+0, 3
$0030	$1580			BSF	INDF, __LCD8_DB3
$0031	$192B			BTFSC	FARG_Lcd8_Cmd+0, 2
$0032	$1500			BSF	INDF, __LCD8_DB2
$0033	$18AB			BTFSC	FARG_Lcd8_Cmd+0, 1
$0034	$1480			BSF	INDF, __LCD8_DB1
$0035	$182B			BTFSC	FARG_Lcd8_Cmd+0, 0
$0036	$1400			BSF	INDF, __LCD8_DB0
$0037	$0821			MOVF	lcd8bit_CtrlAddress, 0
$0038	$0084			MOVWF	FSR
$0039	$1500			BSF	INDF, __LCD8_RS
$003A	$0822			MOVF	_com, 0
$003B	$1903			BTFSC	STATUS, Z
$003C	$283E			GOTO	L_Lcd8_Cmd_1
$003D	$1100			BCF	INDF, __LCD8_RS
$003E	$	L_Lcd8_Cmd_1:
$003E	$1480			BSF	INDF, __LCD8_ENABLE
$003F	$2004			CALL	_Delay_1us
$0040	$1080			BCF	INDF, __LCD8_ENABLE
$0041	$0822			MOVF	_com, 0
$0042	$1903			BTFSC	STATUS, Z
$0043	$2846			GOTO	L_Lcd8_Cmd_2
$0044	$2006			CALL	_Delay_5500us
$0045	$2847			GOTO	L_Lcd8_Cmd_3
$0046	$	L_Lcd8_Cmd_2:
$0046	$2017			CALL	_Delay_50us
$0047	$	L_Lcd8_Cmd_3:
$0047	$0008			RETURN
$0048	$	_Usart_Data_Ready:
$0048	$3000			MOVLW	0
$0049	$1303			BCF	STATUS, RP1
$004A	$1283			BCF	STATUS, RP0
$004B	$1A8C			BTFSC	PIR1, 5
$004C	$3001			MOVLW	1
$004D	$00F1			MOVWF	STACK_1
$004E	$0871			MOVF	STACK_1, 0
$004F	$00F0			MOVWF	STACK_0
$0050	$0008			RETURN
$0051	$	_Usart_Read:
$0051	$1303			BCF	STATUS, RP1
$0052	$1283			BCF	STATUS, RP0
$0053	$081A			MOVF	RCREG, 0
$0054	$00A6			MOVWF	Usart_Read_tmp_L0
$0055	$1C98			BTFSS	RCSTA, 1
$0056	$2859			GOTO	L_Usart_Read_2
$0057	$1218			BCF	RCSTA, 4
$0058	$1618			BSF	RCSTA, 4
$0059	$	L_Usart_Read_2:
$0059	$0826			MOVF	Usart_Read_tmp_L0, 0
$005A	$00F0			MOVWF	STACK_0
$005B	$0008			RETURN
$005C	$	_Usart_Write:
$005C	$	L_Usart_Write_3:
$005C	$3000			MOVLW	0
$005D	$1303			BCF	STATUS, RP1
$005E	$1683			BSF	STATUS, RP0
$005F	$1898			BTFSC	TXSTA, 1
$0060	$3001			MOVLW	1
$0061	$00F1			MOVWF	STACK_1
$0062	$0871			MOVF	STACK_1, 0
$0063	$3A00			XORLW	0
$0064	$1D03			BTFSS	STATUS, Z
$0065	$2868			GOTO	L_Usart_Write_4
$0066	$0000			NOP
$0067	$285C			GOTO	L_Usart_Write_3
$0068	$	L_Usart_Write_4:
$0068	$1283			BCF	STATUS, RP0
$0069	$0826			MOVF	FARG_Usart_Write+0, 0
$006A	$0099			MOVWF	TXREG
$006B	$0008			RETURN
$006C	$	_Lcd8_Chr:
$006C	$287E			GOTO	L_Lcd8_Chr_4
$006D	$	L_Lcd8_Chr_6:
$006D	$3080			MOVLW	128
$006E	$1303			BCF	STATUS, RP1
$006F	$1283			BCF	STATUS, RP0
$0070	$00A6			MOVWF	FARG_Lcd8_Chr+0
$0071	$2891			GOTO	L_Lcd8_Chr_5
$0072	$	L_Lcd8_Chr_7:
$0072	$30C0			MOVLW	192
$0073	$00A6			MOVWF	FARG_Lcd8_Chr+0
$0074	$2891			GOTO	L_Lcd8_Chr_5
$0075	$	L_Lcd8_Chr_8:
$0075	$3094			MOVLW	148
$0076	$00A6			MOVWF	FARG_Lcd8_Chr+0
$0077	$2891			GOTO	L_Lcd8_Chr_5
$0078	$	L_Lcd8_Chr_9:
$0078	$30D4			MOVLW	212
$0079	$00A6			MOVWF	FARG_Lcd8_Chr+0
$007A	$2891			GOTO	L_Lcd8_Chr_5
$007B	$	L_Lcd8_Chr_10:
$007B	$3080			MOVLW	128
$007C	$00A6			MOVWF	FARG_Lcd8_Chr+0
$007D	$2891			GOTO	L_Lcd8_Chr_5
$007E	$	L_Lcd8_Chr_4:
$007E	$1303			BCF	STATUS, RP1
$007F	$1283			BCF	STATUS, RP0
$0080	$0826			MOVF	FARG_Lcd8_Chr+0, 0
$0081	$3A01			XORLW	1
$0082	$1903			BTFSC	STATUS, Z
$0083	$286D			GOTO	L_Lcd8_Chr_6
$0084	$0826			MOVF	FARG_Lcd8_Chr+0, 0
$0085	$3A02			XORLW	2
$0086	$1903			BTFSC	STATUS, Z
$0087	$2872			GOTO	L_Lcd8_Chr_7
$0088	$0826			MOVF	FARG_Lcd8_Chr+0, 0
$0089	$3A03			XORLW	3
$008A	$1903			BTFSC	STATUS, Z
$008B	$2875			GOTO	L_Lcd8_Chr_8
$008C	$0826			MOVF	FARG_Lcd8_Chr+0, 0
$008D	$3A04			XORLW	4
$008E	$1903			BTFSC	STATUS, Z
$008F	$2878			GOTO	L_Lcd8_Chr_9
$0090	$287B			GOTO	L_Lcd8_Chr_10
$0091	$	L_Lcd8_Chr_5:
$0091	$0327			DECF	FARG_Lcd8_Chr+1, 0
$0092	$00F0			MOVWF	STACK_0
$0093	$0826			MOVF	FARG_Lcd8_Chr+0, 0
$0094	$07F0			ADDWF	STACK_0, 1
$0095	$0870			MOVF	STACK_0, 0
$0096	$00A6			MOVWF	FARG_Lcd8_Chr+0
$0097	$0870			MOVF	STACK_0, 0
$0098	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$0099	$201F			CALL	_Lcd8_Cmd
$009A	$01A2			CLRF	_com, 1
$009B	$0828			MOVF	FARG_Lcd8_Chr+2, 0
$009C	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$009D	$201F			CALL	_Lcd8_Cmd
$009E	$3001			MOVLW	1
$009F	$00A2			MOVWF	_com
$00A0	$0008			RETURN
$00A1	$	_Lcd8_Init:
$00A1	$2006			CALL	_Delay_5500us
$00A2	$2006			CALL	_Delay_5500us
$00A3	$2006			CALL	_Delay_5500us
$00A4	$0827			MOVF	FARG_Lcd8_Init+1, 0
$00A5	$00A0			MOVWF	lcd8bit_DataAddress
$00A6	$0827			MOVF	FARG_Lcd8_Init+1, 0
$00A7	$0084			MOVWF	FSR
$00A8	$1784			BSF	FSR, 7
$00A9	$0180			CLRF	INDF, 1
$00AA	$0826			MOVF	FARG_Lcd8_Init+0, 0
$00AB	$00A1			MOVWF	lcd8bit_CtrlAddress
$00AC	$0826			MOVF	FARG_Lcd8_Init+0, 0
$00AD	$0084			MOVWF	FSR
$00AE	$1180			BCF	INDF, __LCD8_RW
$00AF	$1784			BSF	FSR, 7
$00B0	$1100			BCF	INDF, __LCD8_RS
$00B1	$1180			BCF	INDF, __LCD8_RW
$00B2	$1080			BCF	INDF, __LCD8_ENABLE
$00B3	$1384			BCF	FSR, 7
$00B4	$3001			MOVLW	1
$00B5	$00A2			MOVWF	_com
$00B6	$3030			MOVLW	48
$00B7	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00B8	$201F			CALL	_Lcd8_Cmd
$00B9	$3030			MOVLW	48
$00BA	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00BB	$201F			CALL	_Lcd8_Cmd
$00BC	$3030			MOVLW	48
$00BD	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00BE	$201F			CALL	_Lcd8_Cmd
$00BF	$3038			MOVLW	56
$00C0	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00C1	$201F			CALL	_Lcd8_Cmd
$00C2	$3008			MOVLW	8
$00C3	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00C4	$201F			CALL	_Lcd8_Cmd
$00C5	$3001			MOVLW	1
$00C6	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00C7	$201F			CALL	_Lcd8_Cmd
$00C8	$3006			MOVLW	6
$00C9	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00CA	$201F			CALL	_Lcd8_Cmd
$00CB	$300C			MOVLW	12
$00CC	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00CD	$201F			CALL	_Lcd8_Cmd
$00CE	$0008			RETURN
$00CF	$	_Usart_Init:
$00CF	$1303			BCF	STATUS, RP1
$00D0	$1683			BSF	STATUS, RP0
$00D1	$1698			BSF	TXSTA, 5
$00D2	$3090			MOVLW	144
$00D3	$1283			BCF	STATUS, RP0
$00D4	$0098			MOVWF	RCSTA
$00D5	$1683			BSF	STATUS, RP0
$00D6	$1787			BSF	TRISC, 7
$00D7	$1307			BCF	TRISC, 6
$00D8	$	L_Usart_Init_0:
$00D8	$1283			BCF	STATUS, RP0
$00D9	$1E8C			BTFSS	PIR1, 5
$00DA	$28DE			GOTO	L_Usart_Init_1
$00DB	$081A			MOVF	RCREG, 0
$00DC	$00AA			MOVWF	Usart_Init_tmp_L0
$00DD	$28D8			GOTO	L_Usart_Init_0
$00DE	$	L_Usart_Init_1:
$00DE	$0008			RETURN
$00DF	$	_main:
;recepcao.c,32 :: 		void main(void)
;recepcao.c,34 :: 		trisa=0b11111111;            // põe todos os pinos para entrada
$00DF	$30FF			MOVLW	255
$00E0	$1303			BCF	STATUS, RP1
$00E1	$1683			BSF	STATUS, RP0
$00E2	$0085			MOVWF	TRISA
;recepcao.c,35 :: 		trisd=0b00000000;
$00E3	$0188			CLRF	TRISD, 1
;recepcao.c,36 :: 		trise=0b00000001;            //configura i/os
$00E4	$3001			MOVLW	1
$00E5	$0089			MOVWF	TRISE
;recepcao.c,37 :: 		adcon1=7;                    //desliga todos os a/ds
$00E6	$3007			MOVLW	7
$00E7	$009F			MOVWF	ADCON1
;recepcao.c,38 :: 		option_reg=0b10000000;       //configura prescaler do timer 0
$00E8	$3080			MOVLW	128
$00E9	$0081			MOVWF	OPTION_REG
;recepcao.c,39 :: 		Lcd8_Config(&PORTE, &PORTD, 2, 1, 3, 7, 6, 5, 4, 3, 2, 1, 0);
$00EA	$3009			MOVLW	PORTE
$00EB	$1283			BCF	STATUS, RP0
$00EC	$00A6			MOVWF	FARG_Lcd8_Init+0
$00ED	$3008			MOVLW	PORTD
$00EE	$00A7			MOVWF	FARG_Lcd8_Init+1
$00EF	$20A1			CALL	_Lcd8_Init
;recepcao.c,40 :: 		Lcd8_Cmd(LCD_CLEAR);          //limpa o display
$00F0	$3001			MOVLW	1
$00F1	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00F2	$201F			CALL	_Lcd8_Cmd
;recepcao.c,41 :: 		Lcd8_Cmd(LCD_CURSOR_OFF);     //Desliga o cursor
$00F3	$300C			MOVLW	12
$00F4	$00AB			MOVWF	FARG_Lcd8_Cmd+0
$00F5	$201F			CALL	_Lcd8_Cmd
;recepcao.c,42 :: 		Usart_Init(9600);             //Inicializa o módulo Usart para trabalhar a 9600bps
$00F6	$3019			MOVLW	25
$00F7	$1683			BSF	STATUS, RP0
$00F8	$0099			MOVWF	SPBRG
$00F9	$1518			BSF	TXSTA, BRGH
$00FA	$20CF			CALL	_Usart_Init
;recepcao.c,43 :: 		linha=1;
$00FB	$3001			MOVLW	1
$00FC	$00A3			MOVWF	_linha
;recepcao.c,44 :: 		coluna=1;
$00FD	$3001			MOVLW	1
$00FE	$00A4			MOVWF	_coluna
;recepcao.c,46 :: 		while(1)
$00FF	$	L_main_0:
;recepcao.c,48 :: 		if (usart_data_ready())
$00FF	$2048			CALL	_Usart_Data_Ready
$0100	$0870			MOVF	STACK_0, 0
$0101	$1903			BTFSC	STATUS, Z
$0102	$2923			GOTO	L_main_2
;recepcao.c,50 :: 		recepcao=Usart_Read();
$0103	$2051			CALL	_Usart_Read
$0104	$0870			MOVF	STACK_0, 0
$0105	$00A5			MOVWF	_recepcao
;recepcao.c,51 :: 		Usart_Write(recepcao);
$0106	$0870			MOVF	STACK_0, 0
$0107	$00A6			MOVWF	FARG_Usart_Write+0
$0108	$205C			CALL	_Usart_Write
;recepcao.c,52 :: 		Lcd8_Chr(linha,coluna,recepcao);
$0109	$0823			MOVF	_linha, 0
$010A	$00A6			MOVWF	FARG_Lcd8_Chr+0
$010B	$0824			MOVF	_coluna, 0
$010C	$00A7			MOVWF	FARG_Lcd8_Chr+1
$010D	$0825			MOVF	_recepcao, 0
$010E	$00A8			MOVWF	FARG_Lcd8_Chr+2
$010F	$206C			CALL	_Lcd8_Chr
;recepcao.c,53 :: 		coluna=coluna+1;
$0110	$0A24			INCF	_coluna, 0
$0111	$00F1			MOVWF	STACK_1
$0112	$0871			MOVF	STACK_1, 0
$0113	$00A4			MOVWF	_coluna
;recepcao.c,54 :: 		if (coluna==17)
$0114	$0871			MOVF	STACK_1, 0
$0115	$3A11			XORLW	17
$0116	$1D03			BTFSS	STATUS, Z
$0117	$2923			GOTO	L_main_3
;recepcao.c,56 :: 		coluna=1;
$0118	$3001			MOVLW	1
$0119	$00A4			MOVWF	_coluna
;recepcao.c,57 :: 		if (linha==1) linha=2;
$011A	$0823			MOVF	_linha, 0
$011B	$3A01			XORLW	1
$011C	$1D03			BTFSS	STATUS, Z
$011D	$2921			GOTO	L_main_4
$011E	$3002			MOVLW	2
$011F	$00A3			MOVWF	_linha
$0120	$2923			GOTO	L_main_5
$0121	$	L_main_4:
;recepcao.c,58 :: 		else          linha=1;
$0121	$3001			MOVLW	1
$0122	$00A3			MOVWF	_linha
$0123	$	L_main_5:
;recepcao.c,59 :: 		}
$0123	$	L_main_3:
;recepcao.c,60 :: 		}
$0123	$	L_main_2:
;recepcao.c,61 :: 		}
$0123	$28FF			GOTO	L_main_0
;recepcao.c,62 :: 		}
$0124	$2924			GOTO	$
