;  ASM code generated by mikroVirtualMachine for PIC - V. 6.2.1.0
;  Date/Time: 29/7/2007 14:09:33
;  Info: http://www.mikroelektronika.co.yu


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$294C			GOTO	_main
$0004	$	_interrupt:
$0004	$00FF			MOVWF	STACK_15
$0005	$0E03			SWAPF	STATUS, 0
$0006	$0183			CLRF	STATUS
$0007	$00A8			MOVWF	?saveSTATUS
$0008	$0804			MOVF	FSR, 0
$0009	$00A7			MOVWF	?saveFSR
$000A	$080A			MOVF	PCLATH, 0
$000B	$00A9			MOVWF	?savePCLATH
$000C	$018A			CLRF	PCLATH
$000D	$0871			MOVF	STACK_1, 0
$000E	$00AC			MOVWF	STSAVED_1
$000F	$0870			MOVF	STACK_0, 0
$0010	$00AB			MOVWF	STSAVED_0
;tecladomatricial.c,103 :: 		void interrupt(void)
;tecladomatricial.c,106 :: 		intcon.t0if=0;
$0011	$110B			BCF	INTCON, 2
;tecladomatricial.c,107 :: 		indice++;
$0012	$0AA0			INCF	_indice, 1
;tecladomatricial.c,109 :: 		switch(indice)
$0013	$28B9			GOTO	L_interrupt_18
;tecladomatricial.c,111 :: 		case 1:
$0014	$	L_interrupt_20:
;tecladomatricial.c,112 :: 		portb.f4=0;
$0014	$1206			BCF	PORTB, 4
;tecladomatricial.c,113 :: 		Delay_us(5);          //tempo de acomodação
$0015	$3001			MOVLW	1
$0016	$00FA			MOVWF	STACK_10
$0017	$0BFA			DECFSZ	STACK_10, F
$0018	$2817			GOTO	$-1
$0019	$0000			NOP
;tecladomatricial.c,114 :: 		portd=SEL_LINHA1;
$001A	$300E			MOVLW	14
$001B	$0088			MOVWF	PORTD
;tecladomatricial.c,115 :: 		teclado0.tecla_1=0;
$001C	$10A1			BCF	_teclado0, 1
;tecladomatricial.c,116 :: 		teclado0.tecla_2=0;
$001D	$1121			BCF	_teclado0, 2
;tecladomatricial.c,117 :: 		teclado0.tecla_3=0;
$001E	$11A1			BCF	_teclado0, 3
;tecladomatricial.c,118 :: 		if (porta.f4 == 0) teclado0.tecla_1=1;
$001F	$3000			MOVLW	0
$0020	$1A05			BTFSC	PORTA, 4
$0021	$3001			MOVLW	1
$0022	$00F1			MOVWF	STACK_1
$0023	$0871			MOVF	STACK_1, 0
$0024	$3A00			XORLW	0
$0025	$1D03			BTFSS	STATUS, Z
$0026	$2828			GOTO	L_interrupt_21
$0027	$14A1			BSF	_teclado0, 1
$0028	$	L_interrupt_21:
;tecladomatricial.c,119 :: 		if (porta.f5 == 0) teclado0.tecla_2=1;
$0028	$3000			MOVLW	0
$0029	$1A85			BTFSC	PORTA, 5
$002A	$3001			MOVLW	1
$002B	$00F1			MOVWF	STACK_1
$002C	$0871			MOVF	STACK_1, 0
$002D	$3A00			XORLW	0
$002E	$1D03			BTFSS	STATUS, Z
$002F	$2831			GOTO	L_interrupt_22
$0030	$1521			BSF	_teclado0, 2
$0031	$	L_interrupt_22:
;tecladomatricial.c,120 :: 		if (porte.f0 == 0) teclado0.tecla_3=1;
$0031	$3001			MOVLW	1
$0032	$0509			ANDWF	PORTE, 0
$0033	$00F1			MOVWF	STACK_1
$0034	$0871			MOVF	STACK_1, 0
$0035	$3A00			XORLW	0
$0036	$1D03			BTFSS	STATUS, Z
$0037	$2839			GOTO	L_interrupt_23
$0038	$15A1			BSF	_teclado0, 3
$0039	$	L_interrupt_23:
;tecladomatricial.c,121 :: 		portd=vetor_display[0];
$0039	$0822			MOVF	_vetor_display, 0
$003A	$0088			MOVWF	PORTD
;tecladomatricial.c,122 :: 		portb.f1=1;
$003B	$1486			BSF	PORTB, 1
;tecladomatricial.c,123 :: 		break;
$003C	$28C9			GOTO	L_interrupt_19
;tecladomatricial.c,125 :: 		case 2:
$003D	$	L_interrupt_24:
;tecladomatricial.c,126 :: 		portb.f1=0;
$003D	$1086			BCF	PORTB, 1
;tecladomatricial.c,127 :: 		Delay_us(5);          //tempo de acomodação
$003E	$3001			MOVLW	1
$003F	$00FA			MOVWF	STACK_10
$0040	$0BFA			DECFSZ	STACK_10, F
$0041	$2840			GOTO	$-1
$0042	$0000			NOP
;tecladomatricial.c,128 :: 		portd=SEL_LINHA2;
$0043	$300D			MOVLW	13
$0044	$0088			MOVWF	PORTD
;tecladomatricial.c,129 :: 		teclado0.tecla_4=0;
$0045	$1221			BCF	_teclado0, 4
;tecladomatricial.c,130 :: 		teclado0.tecla_5=0;
$0046	$12A1			BCF	_teclado0, 5
;tecladomatricial.c,131 :: 		teclado0.tecla_6=0;
$0047	$1321			BCF	_teclado0, 6
;tecladomatricial.c,132 :: 		if (porta.f4 == 0) teclado0.tecla_4=1;
$0048	$3000			MOVLW	0
$0049	$1A05			BTFSC	PORTA, 4
$004A	$3001			MOVLW	1
$004B	$00F1			MOVWF	STACK_1
$004C	$0871			MOVF	STACK_1, 0
$004D	$3A00			XORLW	0
$004E	$1D03			BTFSS	STATUS, Z
$004F	$2851			GOTO	L_interrupt_25
$0050	$1621			BSF	_teclado0, 4
$0051	$	L_interrupt_25:
;tecladomatricial.c,133 :: 		if (porta.f5 == 0) teclado0.tecla_5=1;
$0051	$3000			MOVLW	0
$0052	$1A85			BTFSC	PORTA, 5
$0053	$3001			MOVLW	1
$0054	$00F1			MOVWF	STACK_1
$0055	$0871			MOVF	STACK_1, 0
$0056	$3A00			XORLW	0
$0057	$1D03			BTFSS	STATUS, Z
$0058	$285A			GOTO	L_interrupt_26
$0059	$16A1			BSF	_teclado0, 5
$005A	$	L_interrupt_26:
;tecladomatricial.c,134 :: 		if (porte.f0 == 0) teclado0.tecla_6=1;
$005A	$3001			MOVLW	1
$005B	$0509			ANDWF	PORTE, 0
$005C	$00F1			MOVWF	STACK_1
$005D	$0871			MOVF	STACK_1, 0
$005E	$3A00			XORLW	0
$005F	$1D03			BTFSS	STATUS, Z
$0060	$2862			GOTO	L_interrupt_27
$0061	$1721			BSF	_teclado0, 6
$0062	$	L_interrupt_27:
;tecladomatricial.c,135 :: 		portd=vetor_display[1];
$0062	$0823			MOVF	_vetor_display+1, 0
$0063	$0088			MOVWF	PORTD
;tecladomatricial.c,136 :: 		portb.f2=1;
$0064	$1506			BSF	PORTB, 2
;tecladomatricial.c,137 :: 		break;
$0065	$28C9			GOTO	L_interrupt_19
;tecladomatricial.c,139 :: 		case 3:
$0066	$	L_interrupt_28:
;tecladomatricial.c,140 :: 		portb.f2=0;
$0066	$1106			BCF	PORTB, 2
;tecladomatricial.c,141 :: 		Delay_us(5);          //tempo de acomodação
$0067	$3001			MOVLW	1
$0068	$00FA			MOVWF	STACK_10
$0069	$0BFA			DECFSZ	STACK_10, F
$006A	$2869			GOTO	$-1
$006B	$0000			NOP
;tecladomatricial.c,142 :: 		portd=SEL_LINHA3;
$006C	$300B			MOVLW	11
$006D	$0088			MOVWF	PORTD
;tecladomatricial.c,143 :: 		teclado0.tecla_7=0;
$006E	$13A1			BCF	_teclado0, 7
;tecladomatricial.c,144 :: 		teclado1.tecla_8=0;
$006F	$1026			BCF	_teclado1, 0
;tecladomatricial.c,145 :: 		teclado1.tecla_9=0;
$0070	$10A6			BCF	_teclado1, 1
;tecladomatricial.c,147 :: 		if (porta.f4 == 0) teclado0.tecla_7=1;
$0071	$3000			MOVLW	0
$0072	$1A05			BTFSC	PORTA, 4
$0073	$3001			MOVLW	1
$0074	$00F1			MOVWF	STACK_1
$0075	$0871			MOVF	STACK_1, 0
$0076	$3A00			XORLW	0
$0077	$1D03			BTFSS	STATUS, Z
$0078	$287A			GOTO	L_interrupt_29
$0079	$17A1			BSF	_teclado0, 7
$007A	$	L_interrupt_29:
;tecladomatricial.c,148 :: 		if (porta.f5 == 0) teclado1.tecla_8=1;
$007A	$3000			MOVLW	0
$007B	$1A85			BTFSC	PORTA, 5
$007C	$3001			MOVLW	1
$007D	$00F1			MOVWF	STACK_1
$007E	$0871			MOVF	STACK_1, 0
$007F	$3A00			XORLW	0
$0080	$1D03			BTFSS	STATUS, Z
$0081	$2883			GOTO	L_interrupt_30
$0082	$1426			BSF	_teclado1, 0
$0083	$	L_interrupt_30:
;tecladomatricial.c,149 :: 		if (porte.f0 == 0) teclado1.tecla_9=1;
$0083	$3001			MOVLW	1
$0084	$0509			ANDWF	PORTE, 0
$0085	$00F1			MOVWF	STACK_1
$0086	$0871			MOVF	STACK_1, 0
$0087	$3A00			XORLW	0
$0088	$1D03			BTFSS	STATUS, Z
$0089	$288B			GOTO	L_interrupt_31
$008A	$14A6			BSF	_teclado1, 1
$008B	$	L_interrupt_31:
;tecladomatricial.c,151 :: 		portd=vetor_display[2];
$008B	$0824			MOVF	_vetor_display+2, 0
$008C	$0088			MOVWF	PORTD
;tecladomatricial.c,152 :: 		portb.f3=1;
$008D	$1586			BSF	PORTB, 3
;tecladomatricial.c,153 :: 		break;
$008E	$28C9			GOTO	L_interrupt_19
;tecladomatricial.c,155 :: 		case 4:
$008F	$	L_interrupt_32:
;tecladomatricial.c,157 :: 		portb.f3=0;
$008F	$1186			BCF	PORTB, 3
;tecladomatricial.c,158 :: 		Delay_us(5);          //tempo de acomodação
$0090	$3001			MOVLW	1
$0091	$00FA			MOVWF	STACK_10
$0092	$0BFA			DECFSZ	STACK_10, F
$0093	$2892			GOTO	$-1
$0094	$0000			NOP
;tecladomatricial.c,159 :: 		portd=SEL_LINHA4;
$0095	$3007			MOVLW	7
$0096	$0088			MOVWF	PORTD
;tecladomatricial.c,160 :: 		teclado1.tecla_c=0;
$0097	$1126			BCF	_teclado1, 2
;tecladomatricial.c,161 :: 		teclado0.tecla_0=0;
$0098	$1021			BCF	_teclado0, 0
;tecladomatricial.c,162 :: 		teclado1.tecla_e=0;
$0099	$11A6			BCF	_teclado1, 3
;tecladomatricial.c,164 :: 		if (porta.f4 == 0) teclado1.tecla_c=1;
$009A	$3000			MOVLW	0
$009B	$1A05			BTFSC	PORTA, 4
$009C	$3001			MOVLW	1
$009D	$00F1			MOVWF	STACK_1
$009E	$0871			MOVF	STACK_1, 0
$009F	$3A00			XORLW	0
$00A0	$1D03			BTFSS	STATUS, Z
$00A1	$28A3			GOTO	L_interrupt_33
$00A2	$1526			BSF	_teclado1, 2
$00A3	$	L_interrupt_33:
;tecladomatricial.c,165 :: 		if (porta.f5 == 0) teclado0.tecla_0=1;
$00A3	$3000			MOVLW	0
$00A4	$1A85			BTFSC	PORTA, 5
$00A5	$3001			MOVLW	1
$00A6	$00F1			MOVWF	STACK_1
$00A7	$0871			MOVF	STACK_1, 0
$00A8	$3A00			XORLW	0
$00A9	$1D03			BTFSS	STATUS, Z
$00AA	$28AC			GOTO	L_interrupt_34
$00AB	$1421			BSF	_teclado0, 0
$00AC	$	L_interrupt_34:
;tecladomatricial.c,166 :: 		if (porte.f0 == 0) teclado1.tecla_e=1;
$00AC	$3001			MOVLW	1
$00AD	$0509			ANDWF	PORTE, 0
$00AE	$00F1			MOVWF	STACK_1
$00AF	$0871			MOVF	STACK_1, 0
$00B0	$3A00			XORLW	0
$00B1	$1D03			BTFSS	STATUS, Z
$00B2	$28B4			GOTO	L_interrupt_35
$00B3	$15A6			BSF	_teclado1, 3
$00B4	$	L_interrupt_35:
;tecladomatricial.c,168 :: 		portd=vetor_display[3];
$00B4	$0825			MOVF	_vetor_display+3, 0
$00B5	$0088			MOVWF	PORTD
;tecladomatricial.c,169 :: 		portb.f4=1;
$00B6	$1606			BSF	PORTB, 4
;tecladomatricial.c,170 :: 		indice=0;            //reinicia o indice
$00B7	$01A0			CLRF	_indice, 1
;tecladomatricial.c,171 :: 		break;
$00B8	$28C9			GOTO	L_interrupt_19
;tecladomatricial.c,173 :: 		}
$00B9	$	L_interrupt_18:
$00B9	$0820			MOVF	_indice, 0
$00BA	$3A01			XORLW	1
$00BB	$1903			BTFSC	STATUS, Z
$00BC	$2814			GOTO	L_interrupt_20
$00BD	$0820			MOVF	_indice, 0
$00BE	$3A02			XORLW	2
$00BF	$1903			BTFSC	STATUS, Z
$00C0	$283D			GOTO	L_interrupt_24
$00C1	$0820			MOVF	_indice, 0
$00C2	$3A03			XORLW	3
$00C3	$1903			BTFSC	STATUS, Z
$00C4	$2866			GOTO	L_interrupt_28
$00C5	$0820			MOVF	_indice, 0
$00C6	$3A04			XORLW	4
$00C7	$1903			BTFSC	STATUS, Z
$00C8	$288F			GOTO	L_interrupt_32
$00C9	$	L_interrupt_19:
;tecladomatricial.c,174 :: 		}
$00C9	$	L_Interrupt_end:
$00C9	$082C			MOVF	STSAVED_1, 0
$00CA	$00F1			MOVWF	STACK_1
$00CB	$082B			MOVF	STSAVED_0, 0
$00CC	$00F0			MOVWF	STACK_0
$00CD	$0829			MOVF	?savePCLATH, 0
$00CE	$008A			MOVWF	PCLATH
$00CF	$0827			MOVF	?saveFSR, 0
$00D0	$0084			MOVWF	FSR
$00D1	$0E28			SWAPF	?saveSTATUS, 0
$00D2	$0083			MOVWF	STATUS
$00D3	$0EFF			SWAPF	STACK_15, 1
$00D4	$0E7F			SWAPF	STACK_15, 0
$00D5	$0009			RETFIE
$00D6	$	_Converte_to_7seg:
;tecladomatricial.c,76 :: 		char Converte_to_7seg(char dado)
;tecladomatricial.c,78 :: 		switch(dado)           //tabela de conversão para display de 7 segmentos
$00D6	$2909			GOTO	L_Converte_to_7seg_0
;tecladomatricial.c,80 :: 		case 0  : return CHR_0; break;
$00D7	$	L_Converte_to_7seg_2:
$00D7	$303F			MOVLW	63
$00D8	$1303			BCF	STATUS, RP1
$00D9	$1283			BCF	STATUS, RP0
$00DA	$00F0			MOVWF	STACK_0
$00DB	$0008			RETURN
;tecladomatricial.c,81 :: 		case 1  : return CHR_1; break;
$00DC	$	L_Converte_to_7seg_3:
$00DC	$3006			MOVLW	6
$00DD	$00F0			MOVWF	STACK_0
$00DE	$0008			RETURN
;tecladomatricial.c,82 :: 		case 2  : return CHR_2; break;
$00DF	$	L_Converte_to_7seg_4:
$00DF	$305B			MOVLW	91
$00E0	$00F0			MOVWF	STACK_0
$00E1	$0008			RETURN
;tecladomatricial.c,83 :: 		case 3  : return CHR_3; break;
$00E2	$	L_Converte_to_7seg_5:
$00E2	$304F			MOVLW	79
$00E3	$00F0			MOVWF	STACK_0
$00E4	$0008			RETURN
;tecladomatricial.c,84 :: 		case 4  : return CHR_4; break;
$00E5	$	L_Converte_to_7seg_6:
$00E5	$3066			MOVLW	102
$00E6	$00F0			MOVWF	STACK_0
$00E7	$0008			RETURN
;tecladomatricial.c,85 :: 		case 5  : return CHR_5; break;
$00E8	$	L_Converte_to_7seg_7:
$00E8	$306D			MOVLW	109
$00E9	$00F0			MOVWF	STACK_0
$00EA	$0008			RETURN
;tecladomatricial.c,86 :: 		case 6  : return CHR_6; break;
$00EB	$	L_Converte_to_7seg_8:
$00EB	$307D			MOVLW	125
$00EC	$00F0			MOVWF	STACK_0
$00ED	$0008			RETURN
;tecladomatricial.c,87 :: 		case 7  : return CHR_7; break;
$00EE	$	L_Converte_to_7seg_9:
$00EE	$3007			MOVLW	7
$00EF	$00F0			MOVWF	STACK_0
$00F0	$0008			RETURN
;tecladomatricial.c,88 :: 		case 8  : return CHR_8; break;
$00F1	$	L_Converte_to_7seg_10:
$00F1	$307F			MOVLW	127
$00F2	$00F0			MOVWF	STACK_0
$00F3	$0008			RETURN
;tecladomatricial.c,89 :: 		case 9  : return CHR_9; break;
$00F4	$	L_Converte_to_7seg_11:
$00F4	$306F			MOVLW	111
$00F5	$00F0			MOVWF	STACK_0
$00F6	$0008			RETURN
;tecladomatricial.c,90 :: 		case 10 : return CHR_A; break;
$00F7	$	L_Converte_to_7seg_12:
$00F7	$3077			MOVLW	119
$00F8	$00F0			MOVWF	STACK_0
$00F9	$0008			RETURN
;tecladomatricial.c,91 :: 		case 11 : return CHR_B; break;
$00FA	$	L_Converte_to_7seg_13:
$00FA	$307C			MOVLW	124
$00FB	$00F0			MOVWF	STACK_0
$00FC	$0008			RETURN
;tecladomatricial.c,92 :: 		case 12 : return CHR_C; break;
$00FD	$	L_Converte_to_7seg_14:
$00FD	$3039			MOVLW	57
$00FE	$00F0			MOVWF	STACK_0
$00FF	$0008			RETURN
;tecladomatricial.c,93 :: 		case 13 : return CHR_D; break;
$0100	$	L_Converte_to_7seg_15:
$0100	$305E			MOVLW	94
$0101	$00F0			MOVWF	STACK_0
$0102	$0008			RETURN
;tecladomatricial.c,94 :: 		case 14 : return CHR_E; break;
$0103	$	L_Converte_to_7seg_16:
$0103	$3079			MOVLW	121
$0104	$00F0			MOVWF	STACK_0
$0105	$0008			RETURN
;tecladomatricial.c,95 :: 		case 15 : return CHR_F; break;
$0106	$	L_Converte_to_7seg_17:
$0106	$3071			MOVLW	113
$0107	$00F0			MOVWF	STACK_0
$0108	$0008			RETURN
;tecladomatricial.c,96 :: 		}
$0109	$	L_Converte_to_7seg_0:
$0109	$1303			BCF	STATUS, RP1
$010A	$1283			BCF	STATUS, RP0
$010B	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$010C	$3A00			XORLW	0
$010D	$1903			BTFSC	STATUS, Z
$010E	$28D7			GOTO	L_Converte_to_7seg_2
$010F	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0110	$3A01			XORLW	1
$0111	$1903			BTFSC	STATUS, Z
$0112	$28DC			GOTO	L_Converte_to_7seg_3
$0113	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0114	$3A02			XORLW	2
$0115	$1903			BTFSC	STATUS, Z
$0116	$28DF			GOTO	L_Converte_to_7seg_4
$0117	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0118	$3A03			XORLW	3
$0119	$1903			BTFSC	STATUS, Z
$011A	$28E2			GOTO	L_Converte_to_7seg_5
$011B	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$011C	$3A04			XORLW	4
$011D	$1903			BTFSC	STATUS, Z
$011E	$28E5			GOTO	L_Converte_to_7seg_6
$011F	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0120	$3A05			XORLW	5
$0121	$1903			BTFSC	STATUS, Z
$0122	$28E8			GOTO	L_Converte_to_7seg_7
$0123	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0124	$3A06			XORLW	6
$0125	$1903			BTFSC	STATUS, Z
$0126	$28EB			GOTO	L_Converte_to_7seg_8
$0127	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0128	$3A07			XORLW	7
$0129	$1903			BTFSC	STATUS, Z
$012A	$28EE			GOTO	L_Converte_to_7seg_9
$012B	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$012C	$3A08			XORLW	8
$012D	$1903			BTFSC	STATUS, Z
$012E	$28F1			GOTO	L_Converte_to_7seg_10
$012F	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0130	$3A09			XORLW	9
$0131	$1903			BTFSC	STATUS, Z
$0132	$28F4			GOTO	L_Converte_to_7seg_11
$0133	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0134	$3A0A			XORLW	10
$0135	$1903			BTFSC	STATUS, Z
$0136	$28F7			GOTO	L_Converte_to_7seg_12
$0137	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0138	$3A0B			XORLW	11
$0139	$1903			BTFSC	STATUS, Z
$013A	$28FA			GOTO	L_Converte_to_7seg_13
$013B	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$013C	$3A0C			XORLW	12
$013D	$1903			BTFSC	STATUS, Z
$013E	$28FD			GOTO	L_Converte_to_7seg_14
$013F	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0140	$3A0D			XORLW	13
$0141	$1903			BTFSC	STATUS, Z
$0142	$2900			GOTO	L_Converte_to_7seg_15
$0143	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0144	$3A0E			XORLW	14
$0145	$1903			BTFSC	STATUS, Z
$0146	$2903			GOTO	L_Converte_to_7seg_16
$0147	$082A			MOVF	FARG_Converte_to_7seg+0, 0
$0148	$3A0F			XORLW	15
$0149	$1903			BTFSC	STATUS, Z
$014A	$2906			GOTO	L_Converte_to_7seg_17
$014B	$	L_Converte_to_7seg_1:
;tecladomatricial.c,97 :: 		}
$014B	$0008			RETURN
$014C	$	_main:
;tecladomatricial.c,181 :: 		void main(void)
;tecladomatricial.c,184 :: 		trisa=0b00110000;
$014C	$3030			MOVLW	48
$014D	$1303			BCF	STATUS, RP1
$014E	$1683			BSF	STATUS, RP0
$014F	$0085			MOVWF	TRISA
;tecladomatricial.c,185 :: 		trisb=0b00000000;
$0150	$0186			CLRF	TRISB, 1
;tecladomatricial.c,186 :: 		trisd=0b00000000;
$0151	$0188			CLRF	TRISD, 1
;tecladomatricial.c,187 :: 		trise=0b00000001;            //configura i/os
$0152	$3001			MOVLW	1
$0153	$0089			MOVWF	TRISE
;tecladomatricial.c,188 :: 		option_reg=0b10000000;       //configura prescaler do timer 0
$0154	$3080			MOVLW	128
$0155	$0081			MOVWF	OPTION_REG
;tecladomatricial.c,189 :: 		indice=0;                    //inicializa a variável de índice
$0156	$1283			BCF	STATUS, RP0
$0157	$01A0			CLRF	_indice, 1
;tecladomatricial.c,190 :: 		teclado0=0;
$0158	$01A1			CLRF	_teclado0, 1
;tecladomatricial.c,191 :: 		teclado1=0;                  //inicializa variáveis do teclado
$0159	$01A6			CLRF	_teclado1, 1
;tecladomatricial.c,192 :: 		adcon1=0b00000111;           //desliga os a/ds
$015A	$3007			MOVLW	7
$015B	$1683			BSF	STATUS, RP0
$015C	$009F			MOVWF	ADCON1
;tecladomatricial.c,193 :: 		intcon=0b10100000;           //configura interrupção de timer0
$015D	$30A0			MOVLW	160
$015E	$008B			MOVWF	INTCON
;tecladomatricial.c,194 :: 		vetor_display[0]=0;
$015F	$1283			BCF	STATUS, RP0
$0160	$01A2			CLRF	_vetor_display, 1
;tecladomatricial.c,195 :: 		vetor_display[1]=0;
$0161	$01A3			CLRF	_vetor_display+1, 1
;tecladomatricial.c,196 :: 		vetor_display[2]=0;
$0162	$01A4			CLRF	_vetor_display+2, 1
;tecladomatricial.c,197 :: 		vetor_display[3]=0;
$0163	$01A5			CLRF	_vetor_display+3, 1
;tecladomatricial.c,199 :: 		while (1)
$0164	$	L_main_36:
;tecladomatricial.c,201 :: 		if (teclado0.tecla_1 == 1) vetor_display[0]=Converte_to_7seg(1);
$0164	$3000			MOVLW	0
$0165	$18A1			BTFSC	_teclado0, 1
$0166	$3001			MOVLW	1
$0167	$00F1			MOVWF	STACK_1
$0168	$0871			MOVF	STACK_1, 0
$0169	$3A01			XORLW	1
$016A	$1D03			BTFSS	STATUS, Z
$016B	$2973			GOTO	L_main_38
$016C	$3001			MOVLW	1
$016D	$00AA			MOVWF	FARG_Converte_to_7seg+0
$016E	$20D6			CALL	_Converte_to_7seg
$016F	$1303			BCF	STATUS, RP1
$0170	$1283			BCF	STATUS, RP0
$0171	$0870			MOVF	STACK_0, 0
$0172	$00A2			MOVWF	_vetor_display
$0173	$	L_main_38:
;tecladomatricial.c,202 :: 		if (teclado0.tecla_2 == 1) vetor_display[0]=Converte_to_7seg(2);
$0173	$3000			MOVLW	0
$0174	$1303			BCF	STATUS, RP1
$0175	$1283			BCF	STATUS, RP0
$0176	$1921			BTFSC	_teclado0, 2
$0177	$3001			MOVLW	1
$0178	$00F1			MOVWF	STACK_1
$0179	$0871			MOVF	STACK_1, 0
$017A	$3A01			XORLW	1
$017B	$1D03			BTFSS	STATUS, Z
$017C	$2984			GOTO	L_main_39
$017D	$3002			MOVLW	2
$017E	$00AA			MOVWF	FARG_Converte_to_7seg+0
$017F	$20D6			CALL	_Converte_to_7seg
$0180	$1303			BCF	STATUS, RP1
$0181	$1283			BCF	STATUS, RP0
$0182	$0870			MOVF	STACK_0, 0
$0183	$00A2			MOVWF	_vetor_display
$0184	$	L_main_39:
;tecladomatricial.c,203 :: 		if (teclado0.tecla_3 == 1) vetor_display[0]=Converte_to_7seg(3);
$0184	$3000			MOVLW	0
$0185	$1303			BCF	STATUS, RP1
$0186	$1283			BCF	STATUS, RP0
$0187	$19A1			BTFSC	_teclado0, 3
$0188	$3001			MOVLW	1
$0189	$00F1			MOVWF	STACK_1
$018A	$0871			MOVF	STACK_1, 0
$018B	$3A01			XORLW	1
$018C	$1D03			BTFSS	STATUS, Z
$018D	$2995			GOTO	L_main_40
$018E	$3003			MOVLW	3
$018F	$00AA			MOVWF	FARG_Converte_to_7seg+0
$0190	$20D6			CALL	_Converte_to_7seg
$0191	$1303			BCF	STATUS, RP1
$0192	$1283			BCF	STATUS, RP0
$0193	$0870			MOVF	STACK_0, 0
$0194	$00A2			MOVWF	_vetor_display
$0195	$	L_main_40:
;tecladomatricial.c,205 :: 		if (teclado0.tecla_4 == 1) vetor_display[1]=Converte_to_7seg(4);
$0195	$3000			MOVLW	0
$0196	$1303			BCF	STATUS, RP1
$0197	$1283			BCF	STATUS, RP0
$0198	$1A21			BTFSC	_teclado0, 4
$0199	$3001			MOVLW	1
$019A	$00F1			MOVWF	STACK_1
$019B	$0871			MOVF	STACK_1, 0
$019C	$3A01			XORLW	1
$019D	$1D03			BTFSS	STATUS, Z
$019E	$29A6			GOTO	L_main_41
$019F	$3004			MOVLW	4
$01A0	$00AA			MOVWF	FARG_Converte_to_7seg+0
$01A1	$20D6			CALL	_Converte_to_7seg
$01A2	$1303			BCF	STATUS, RP1
$01A3	$1283			BCF	STATUS, RP0
$01A4	$0870			MOVF	STACK_0, 0
$01A5	$00A3			MOVWF	_vetor_display+1
$01A6	$	L_main_41:
;tecladomatricial.c,206 :: 		if (teclado0.tecla_5 == 1) vetor_display[1]=Converte_to_7seg(5);
$01A6	$3000			MOVLW	0
$01A7	$1303			BCF	STATUS, RP1
$01A8	$1283			BCF	STATUS, RP0
$01A9	$1AA1			BTFSC	_teclado0, 5
$01AA	$3001			MOVLW	1
$01AB	$00F1			MOVWF	STACK_1
$01AC	$0871			MOVF	STACK_1, 0
$01AD	$3A01			XORLW	1
$01AE	$1D03			BTFSS	STATUS, Z
$01AF	$29B7			GOTO	L_main_42
$01B0	$3005			MOVLW	5
$01B1	$00AA			MOVWF	FARG_Converte_to_7seg+0
$01B2	$20D6			CALL	_Converte_to_7seg
$01B3	$1303			BCF	STATUS, RP1
$01B4	$1283			BCF	STATUS, RP0
$01B5	$0870			MOVF	STACK_0, 0
$01B6	$00A3			MOVWF	_vetor_display+1
$01B7	$	L_main_42:
;tecladomatricial.c,207 :: 		if (teclado0.tecla_6 == 1) vetor_display[1]=Converte_to_7seg(6);
$01B7	$3000			MOVLW	0
$01B8	$1303			BCF	STATUS, RP1
$01B9	$1283			BCF	STATUS, RP0
$01BA	$1B21			BTFSC	_teclado0, 6
$01BB	$3001			MOVLW	1
$01BC	$00F1			MOVWF	STACK_1
$01BD	$0871			MOVF	STACK_1, 0
$01BE	$3A01			XORLW	1
$01BF	$1D03			BTFSS	STATUS, Z
$01C0	$29C8			GOTO	L_main_43
$01C1	$3006			MOVLW	6
$01C2	$00AA			MOVWF	FARG_Converte_to_7seg+0
$01C3	$20D6			CALL	_Converte_to_7seg
$01C4	$1303			BCF	STATUS, RP1
$01C5	$1283			BCF	STATUS, RP0
$01C6	$0870			MOVF	STACK_0, 0
$01C7	$00A3			MOVWF	_vetor_display+1
$01C8	$	L_main_43:
;tecladomatricial.c,209 :: 		if (teclado0.tecla_7 == 1) vetor_display[2]=Converte_to_7seg(7);
$01C8	$3000			MOVLW	0
$01C9	$1303			BCF	STATUS, RP1
$01CA	$1283			BCF	STATUS, RP0
$01CB	$1BA1			BTFSC	_teclado0, 7
$01CC	$3001			MOVLW	1
$01CD	$00F1			MOVWF	STACK_1
$01CE	$0871			MOVF	STACK_1, 0
$01CF	$3A01			XORLW	1
$01D0	$1D03			BTFSS	STATUS, Z
$01D1	$29D9			GOTO	L_main_44
$01D2	$3007			MOVLW	7
$01D3	$00AA			MOVWF	FARG_Converte_to_7seg+0
$01D4	$20D6			CALL	_Converte_to_7seg
$01D5	$1303			BCF	STATUS, RP1
$01D6	$1283			BCF	STATUS, RP0
$01D7	$0870			MOVF	STACK_0, 0
$01D8	$00A4			MOVWF	_vetor_display+2
$01D9	$	L_main_44:
;tecladomatricial.c,210 :: 		if (teclado1.tecla_8 == 1) vetor_display[2]=Converte_to_7seg(8);
$01D9	$3001			MOVLW	1
$01DA	$1303			BCF	STATUS, RP1
$01DB	$1283			BCF	STATUS, RP0
$01DC	$0526			ANDWF	_teclado1, 0
$01DD	$00F1			MOVWF	STACK_1
$01DE	$0871			MOVF	STACK_1, 0
$01DF	$3A01			XORLW	1
$01E0	$1D03			BTFSS	STATUS, Z
$01E1	$29E9			GOTO	L_main_45
$01E2	$3008			MOVLW	8
$01E3	$00AA			MOVWF	FARG_Converte_to_7seg+0
$01E4	$20D6			CALL	_Converte_to_7seg
$01E5	$1303			BCF	STATUS, RP1
$01E6	$1283			BCF	STATUS, RP0
$01E7	$0870			MOVF	STACK_0, 0
$01E8	$00A4			MOVWF	_vetor_display+2
$01E9	$	L_main_45:
;tecladomatricial.c,211 :: 		if (teclado1.tecla_9 == 1) vetor_display[2]=Converte_to_7seg(9);
$01E9	$3000			MOVLW	0
$01EA	$1303			BCF	STATUS, RP1
$01EB	$1283			BCF	STATUS, RP0
$01EC	$18A6			BTFSC	_teclado1, 1
$01ED	$3001			MOVLW	1
$01EE	$00F1			MOVWF	STACK_1
$01EF	$0871			MOVF	STACK_1, 0
$01F0	$3A01			XORLW	1
$01F1	$1D03			BTFSS	STATUS, Z
$01F2	$29FA			GOTO	L_main_46
$01F3	$3009			MOVLW	9
$01F4	$00AA			MOVWF	FARG_Converte_to_7seg+0
$01F5	$20D6			CALL	_Converte_to_7seg
$01F6	$1303			BCF	STATUS, RP1
$01F7	$1283			BCF	STATUS, RP0
$01F8	$0870			MOVF	STACK_0, 0
$01F9	$00A4			MOVWF	_vetor_display+2
$01FA	$	L_main_46:
;tecladomatricial.c,213 :: 		if (teclado1.tecla_C == 1) vetor_display[3]=Converte_to_7seg(12);
$01FA	$3000			MOVLW	0
$01FB	$1303			BCF	STATUS, RP1
$01FC	$1283			BCF	STATUS, RP0
$01FD	$1926			BTFSC	_teclado1, 2
$01FE	$3001			MOVLW	1
$01FF	$00F1			MOVWF	STACK_1
$0200	$0871			MOVF	STACK_1, 0
$0201	$3A01			XORLW	1
$0202	$1D03			BTFSS	STATUS, Z
$0203	$2A0B			GOTO	L_main_47
$0204	$300C			MOVLW	12
$0205	$00AA			MOVWF	FARG_Converte_to_7seg+0
$0206	$20D6			CALL	_Converte_to_7seg
$0207	$1303			BCF	STATUS, RP1
$0208	$1283			BCF	STATUS, RP0
$0209	$0870			MOVF	STACK_0, 0
$020A	$00A5			MOVWF	_vetor_display+3
$020B	$	L_main_47:
;tecladomatricial.c,214 :: 		if (teclado0.tecla_0 == 1) vetor_display[3]=Converte_to_7seg(0);
$020B	$3001			MOVLW	1
$020C	$1303			BCF	STATUS, RP1
$020D	$1283			BCF	STATUS, RP0
$020E	$0521			ANDWF	_teclado0, 0
$020F	$00F1			MOVWF	STACK_1
$0210	$0871			MOVF	STACK_1, 0
$0211	$3A01			XORLW	1
$0212	$1D03			BTFSS	STATUS, Z
$0213	$2A1A			GOTO	L_main_48
$0214	$01AA			CLRF	FARG_Converte_to_7seg+0, 1
$0215	$20D6			CALL	_Converte_to_7seg
$0216	$1303			BCF	STATUS, RP1
$0217	$1283			BCF	STATUS, RP0
$0218	$0870			MOVF	STACK_0, 0
$0219	$00A5			MOVWF	_vetor_display+3
$021A	$	L_main_48:
;tecladomatricial.c,215 :: 		if (teclado1.tecla_E == 1) vetor_display[3]=Converte_to_7seg(14);
$021A	$3000			MOVLW	0
$021B	$1303			BCF	STATUS, RP1
$021C	$1283			BCF	STATUS, RP0
$021D	$19A6			BTFSC	_teclado1, 3
$021E	$3001			MOVLW	1
$021F	$00F1			MOVWF	STACK_1
$0220	$0871			MOVF	STACK_1, 0
$0221	$3A01			XORLW	1
$0222	$1D03			BTFSS	STATUS, Z
$0223	$2A2B			GOTO	L_main_49
$0224	$300E			MOVLW	14
$0225	$00AA			MOVWF	FARG_Converte_to_7seg+0
$0226	$20D6			CALL	_Converte_to_7seg
$0227	$1303			BCF	STATUS, RP1
$0228	$1283			BCF	STATUS, RP0
$0229	$0870			MOVF	STACK_0, 0
$022A	$00A5			MOVWF	_vetor_display+3
$022B	$	L_main_49:
;tecladomatricial.c,216 :: 		}
$022B	$2964			GOTO	L_main_36
;tecladomatricial.c,218 :: 		}
$022C	$2A2C			GOTO	$
