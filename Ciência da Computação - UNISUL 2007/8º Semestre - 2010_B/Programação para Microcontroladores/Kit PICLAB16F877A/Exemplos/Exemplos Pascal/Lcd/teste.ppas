{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*           Programação Em Pascal - Módulo B PIC16F877A       *
*                             Exemplo 2                       *
*                                                             *
*             CENTRO DE TREINAMENTO - Ápice Tecnologia        *
*                                                             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*   VERSÃO : 1.0
*   DATA : 22/07/2005
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                         Descrição geral                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 Implementar um relógio digital sem ajuste via teclado
 O horário será apresentado no display de 7 segmentos}

program teste;       //Definição do programa

const
      CHR_0	= %00111111;		//RETORNA CARACTERE 0
      CHR_1	=	%00000110;		//RETORNA CARACTERE 1
      CHR_2	=	%01011011;	  //RETORNA CARACTERE 2
      CHR_3	=	%01001111;		//RETORNA CARACTERE 3
      CHR_4	=	%01100110;		//RETORNA CARACTERE 4
      CHR_5	=	%01101101;		//RETORNA CARACTERE 5
      CHR_6	=	%01111101;		//RETORNA CARACTERE 6
      CHR_7	=	%00000111;		//RETORNA CARACTERE 7
      CHR_8	=	%01111111;		//RETORNA CARACTERE 8
      CHR_9	=	%01101111;		//RETORNA CARACTERE 9
      CHR_A	=	%01110111;		//RETORNA CARACTERE A
      CHR_B	=	%01111100;		//RETORNA CARACTERE B
      CHR_C	=	%00111001;		//RETORNA CARACTERE C
      CHR_D	=	%01011110;		//RETORNA CARACTERE D
      CHR_E	=	%01111001;		//RETORNA CARACTERE E
      CHR_F	= %01110001;		//RETORNA CARACTERE F
      tecla_0 = 0;
      tecla_1 = 1;
      tecla_2 = 2;
      tecla_3 = 3;
      tecla_4 = 4;
      tecla_5 = 5;
      tecla_6 = 6;
      tecla_7 = 7;
      tecla_8 = 0;
      tecla_9 = 1;
      tecla_C = 2;
      tecla_E = 3;        //constantes para leitura de tecla

      SEL_LINHA1 = %00001110;
      SEL_LINHA2 = %00001101;
      SEL_LINHA3 = %00001011;
      SEL_LINHA4 = %00000111; //constantes para leitura de teclas

      col1=1;
      col2=2;
      col3=3;
      
{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*             Definição e inicialização das variáveis         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir as variáveis globais do sistema}

var
 vetor_display : array[1..4] of byte;
 teclado0,teclado1,indice: byte;

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **
*                      Declaração de Labels                   *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir todos os labels utilizadas pelo sistema}

label  loop_principal;

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * **
*                      Constantes internas                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir as constantes utilizadas pelo sistema}


{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                Declaração dos flags de software             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Aqui iremos definir os flags utilizados no sistema   }

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*               Declaração das saídas do software             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*               Declaração das entradas do software           *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*               Declaração de Rotinas e Interrupções          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*           Rotina de conversão de BCD para 7 segmentos       *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

function Converte_to_7seg(dado: byte):byte;

begin
  case dado of                  //tabela de conversão para display de 7 segmentos
    0 : result:=CHR_0;
    1 : result:=CHR_1;
    2 : result:=CHR_2;
    3 : result:=CHR_3;
    4 : result:=CHR_4;
    5 : result:=CHR_5;
    6 : result:=CHR_6;
    7 : result:=CHR_7;
    8 : result:=CHR_8;
    9 : result:=CHR_9;
    10: result:=CHR_A;
    11: result:=CHR_B;
    12: result:=CHR_C;
    13: result:=CHR_D;
    14: result:=CHR_E;
    15: result:=CHR_F;
 end;
end;

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*               Tratamento de interrupção de timer 0          *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

procedure interrupt;
begin
       clearbit(intcon,t0if);
       inc(indice);

       if indice=1 then
            begin
                   clearbit(portb,1);
                   portd:=SEL_LINHA2;
                   clearbit(teclado0,tecla_4);
                   clearbit(teclado0,tecla_5);
                   clearbit(teclado0,tecla_6);
             end;
              
                if testbit(porta,col1) = 0 then
                            setbit(teclado0,tecla_4);

                   if testbit(porta,col2) = 0 then
                                 setbit(teclado0,tecla_5);

                   if testbit(porte,col3) = 0 then

                        setbit(teclado0,tecla_6);

                   portd:=vetor_display[indice-1];
                   setbit(portb,2);

               clearbit(portb,2);
                   portd:=SEL_LINHA3;
                   clearbit(teclado0,tecla_7);
                   clearbit(teclado1,tecla_8);
                   clearbit(teclado1,tecla_9);

                  if testbit(porta,col1) = 0 then
                                      setbit(teclado0,tecla_7);

                   if testbit(porta,col2) = 0 then

                         setbit(teclado1,tecla_8);

                   if testbit(porte,col3) = 0 then

                         setbit(teclado1,tecla_9);

                   portd:=vetor_display[indice-1];
                   setbit(portb,3);

               clearbit(portb,3);
                   portd:=SEL_LINHA4;
                   clearbit(teclado1,tecla_C);
                   clearbit(teclado0,tecla_0);
                   clearbit(teclado1,tecla_E);

                   if testbit(porta,col1) = 0 then

                         setbit(teclado1,tecla_C);

                   if testbit(porta,col2) = 0 then

                         setbit(teclado0,tecla_0);

                   if testbit(porte,col3) = 0 then

                         setbit(teclado1,tecla_E);

                   portd:=vetor_display[indice-1];
                   setbit(portb,4);
                   indice:=0;       //reinicia o indice}
end;

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                       Início do programa                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
Nessa parte ficará o loop principal do sistema}

begin

   trisa:=%00110000;
   trisb:=%00000000;
   trisd:=%00000000;
   trise:=%00000001;            //configura i/os
   option_reg:=%10000000;       //configura prescaler do timer 0
   indice:=0;                   //inicializa a variável de índice
   teclado0:=0;
   teclado1:=0;                 //inicializa variáveis do teclado
   adcon1:=%00000111;           //desliga os a/ds
   intcon:=%10100000;           //configura interrupção de timer0
 {  vetor_display[1]:=0;
   vetor_display[2]:=0;
   vetor_display[3]:=0;
   vetor_display[4]:=0;
}
{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                       Rotina Principal                      *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

loop_principal:

               goto loop_principal;

{* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                       Fim do programa                       *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *}

end.
